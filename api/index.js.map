{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/components/DesktopNav.tsx", "../app/components/MobileNav.tsx", "../app/icons/InstagramSvg.tsx", "../app/icons/XSvg.tsx", "../app/icons/MenuSvg.tsx", "../app/components/Cart.tsx", "../app/context/useCart.tsx", "../app/lib/calcCartTotal.ts", "../app/lib/formatMoney.ts", "../app/lib/getTotalQuantityInCart.ts", "../app/components/AdjustQuantityButtons.tsx", "../app/components/CartListItem.tsx", "../app/components/CartSummary.tsx", "../app/icons/CoffeeCupIcon.tsx", "../app/components/CartCount.tsx", "../app/lib/sanity/sanity.tsx", "../app/routes/reviewCart.tsx", "../app/routes/success.tsx", "../app/lib/stripePaymentIntent.ts", "../app/routes/coffee.tsx", "../app/routes/coffee/$coffeeSlug.tsx", "../app/lib/sanity/filterDataToSingleItem.tsx", "../app/components/Preview.tsx", "../app/lib/sanity/usePreviewSubscription.tsx", "../app/lib/sanity/config.ts", "../app/lib/sanity/getClient.tsx", "../app/lib/sanity/helpers.js", "../app/components/AddToCartForm.tsx", "../app/icons/MinusSvg.tsx", "../app/icons/PlusSvg.tsx", "../app/routes/coffee/index.tsx", "../app/components/CoffeeCard.tsx", "../app/components/AllCoffee.tsx", "../app/routes/events.tsx", "../app/routes/about.tsx", "../app/routes/index.tsx", "../app/components/HomeHero.tsx", "../app/components/FeaturedItems.tsx", "../app/routes/pay.tsx", "../app/lib/reduceCartByName.ts", "../app/lib/checkAvailability.ts", "../app/lib/calcVerifiedTotal.ts", "../app/routes/pay/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { renderToString } from 'react-dom/server';\nimport type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  useCatch,\n  useLoaderData,\n} from '@remix-run/react';\nimport { SiteSettings } from 'sanityTypes';\nimport Header from './components/Header';\nimport styles from './styles/tailwind-build.css';\nimport sanity from './lib/sanity/sanity';\nimport { CartProvider } from './context/useCart';\n\nconst siteSettingsQuery = `*[_type == \"siteSettings\"][0] {\n  backgroundColor,\n  textColor\n} `;\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\nexport const meta: MetaFunction = () => {\n  const description = `Sample Ecommerce Site`;\n  return {\n    description,\n  };\n};\n\nexport const loader: LoaderFunction = async () => {\n  const data: SiteSettings = await sanity.fetch(siteSettingsQuery);\n  return data;\n};\n\nfunction Document({\n  children,\n  title = `Westy Remix`,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  const data = useLoaderData();\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <Meta />\n        <title>{title}</title>\n        <Links />\n      </head>\n      <body\n        style={{\n          backgroundColor: `${data?.backgroundColor.hex}`,\n          overscrollBehavior: 'none',\n        }}\n      >\n        <CartProvider initialCart={[]}>{children}</CartProvider>\n        <Scripts />\n        {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Header />\n      <Outlet />\n    </Document>\n  );\n}\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <div className='error-container'>\n        <h1>\n          {caught.status} {caught.statusText}\n        </h1>\n      </div>\n    </Document>\n  );\n}\n\n//  with remix <Scripts/>, you can accept the error prop in all your ErrorBoundary components and console.error(error); and you'll get even server-side errors logged in the browser's console.\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title='Uh-oh!'>\n      <Header />\n      <div className='error-container'>\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "import { useState } from 'react';\nimport { Link } from \"@remix-run/react\";\nimport DesktopNav from './DesktopNav';\nimport MobileNav from './MobileNav';\nimport MenuSvg from '~/icons/MenuSvg';\nimport Cart from './Cart';\nimport CoffeeCupIcon from '~/icons/CoffeeCupIcon';\nimport CartCount from './CartCount';\nimport { useCartUtils } from '~/context/useCart';\n\nfunction Header() {\n  const [showMobileNav, toggleShowMobileNav] = useState(false);\n  const { toggleIsCartOpen } = useCartUtils();\n\n  return (\n    <header className='flex text-slate-900 bg-slate-50 items-center p-4'>\n      <p className='text-2xl'>\n        <Link to='/'>westy coffee</Link>\n      </p>\n      <MobileNav\n        showMobileNav={showMobileNav}\n        toggleShowMobileNav={toggleShowMobileNav}\n      />\n      <div className='ml-auto flex'>\n        <button\n          className='grid place-items-center'\n          type='button'\n          aria-label='show navigation menu'\n          onClick={() => {\n            toggleShowMobileNav(true);\n          }}\n        >\n          <MenuSvg />\n        </button>\n        <button\n          type='button'\n          title='Your Cart'\n          aria-label='open your shopping cart'\n          onClick={() => toggleIsCartOpen(true)}\n          className='ml-4 mr-2 grid grid-cols-1 grid-rows-1 place-items-center text-center'\n        >\n          <div className='row-span-full col-span-full'>\n            <CoffeeCupIcon w={'32'} h={'32'} />\n          </div>\n          <CartCount />\n        </button>{' '}\n      </div>\n      <DesktopNav />\n\n      <Cart />\n    </header>\n  );\n}\n\nexport default Header;\n", "import { Link } from \"@remix-run/react\";\n\nconst NavStyles = `\n  padding: 1rem 0;\n  margin-left: auto;\n  ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n  }\n  a {\n    &:hover {\n      color: dark green;\n    }\n  }\n`;\n\nexport default function Nav() {\n  return (\n    <nav className='hidden'>\n      <ul>\n        <li>\n          <Link to='/coffee'>coffee</Link>\n        </li>\n        <li>\n          <Link to='/events'>events</Link>\n        </li>\n        <li>\n          <Link to='/blog'>blog</Link>\n        </li>\n        <li>\n          <Link to='/about'>about</Link>\n        </li>\n        <li>\n          <Link to='/contact'>contact</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport InstagramSvg from '~/icons/InstagramSvg';\nimport XSvg from '~/icons/XSvg';\n\ntype ComponentProps = {\n  showMobileNav: boolean;\n  toggleShowMobileNav: (bool: boolean) => void;\n};\n\nconst links = ['coffee', 'events', 'blog', 'about', 'contact'];\n\nexport default function MobileNav({\n  showMobileNav,\n  toggleShowMobileNav,\n}: ComponentProps) {\n  return (\n    <div\n      className={`bg-slate-50 text-slate-900 p-4 w-3/4 max-w-md fixed top-0 right-0 h-screen z-20 transition-all hideOnDesktop\n        ${showMobileNav ? 'translate-x-0 ' : 'translate-x-full'}`}\n    >\n      <header className='flex items-center justify-end'>\n        <button\n          type='button'\n          className='btn-icon'\n          aria-label='close navigation'\n          onClick={() => toggleShowMobileNav(false)}\n        >\n          <XSvg w={'24'} h={'24'} />\n        </button>\n      </header>\n      <nav>\n        <ul className='flex flex-col text-xl ml-4'>\n          {links.map((link) => (\n            <li key={link} className='p-3'>\n              <Link onClick={() => toggleShowMobileNav(false)} to={`./${link}`}>\n                {link}\n              </Link>\n            </li>\n          ))}\n          <li className='p-3'>\n            <a\n              href='https://www.instagram.com/neighborlycoffee'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              <InstagramSvg w={'24'} h={'24'} />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n", "export default function InstagramSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <rect x='2' y='2' width='20' height='20' rx='5' ry='5'></rect>\n      <path d='M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z'></path>\n      <line x1='17.5' y1='6.5' x2='17.5' y2='6.5'></line>\n    </svg>\n  );\n}\n", "export default function XSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <line x1='18' y1='6' x2='6' y2='18' />\n      <line x1='6' y1='6' x2='18' y2='18' />\n    </svg>\n  );\n}\n", "export default function MenuSvg() {\n  return (\n    // <svg\n    //   width='24'\n    //   height='24'\n    //   viewBox='0 0 24 24'\n    //   fill='none'\n    //   stroke='currentColor'\n    //   strokeWidth='3'\n    //   strokeLinecap='round'\n    //   strokeLinejoin='round'\n    // >\n    //   <line x1='3' y1='12' x2='21' y2='12'></line>\n    //   <line x1='3' y1='5' x2='21' y2='5'></line>\n    //   <line x1='3' y1='19' x2='21' y2='19'></line>\n    // </svg>\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      className='h-5 w-5'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path\n        fillRule='evenodd'\n        d='M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'\n        clipRule='evenodd'\n      />\n    </svg>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { useCartItems, useCartUtils } from '~/context/useCart';\nimport CartSummary from './CartSummary';\n\nexport default function Cart() {\n  const { isCartOpen, toggleIsCartOpen } = useCartUtils();\n  const cartItems = useCartItems();\n  return (\n    <div\n      className={`p-2 fixed bg-slate-50 h-screen w-11/12 max-w-[650px] min-w-[310px] top-0 right-0 z-40 transition-all duration-300 overflow-scroll\n  ${isCartOpen ? 'translate-x-0' : 'translate-x-full'}`}\n    >\n      <header className='flex px-2'>\n        <h2 className='text-3xl'>Your Cart</h2>\n        <button\n          className='ml-auto text-3xl'\n          title='Close Cart'\n          aria-label='Close Your Shopping Cart'\n          onClick={() => toggleIsCartOpen(false)}\n        >\n          &times;\n        </button>\n      </header>\n      <CartSummary />\n      <div className='flex justify-evenly'>\n        <Link\n          className='bg-slate-600 text-slate-50 px-6 py-3 rounded'\n          role='link'\n          onClick={() => toggleIsCartOpen(false)}\n          to='/'\n        >\n          keep shopping\n        </Link>\n        <Link\n          className='bg-amber-800 text-amber-50 px-6 py-3 rounded'\n          role='link'\n          onClick={() => toggleIsCartOpen(false)}\n          to='/reviewCart'\n        >\n          checkout\n        </Link>\n      </div>\n      <div>\n        Cart:\n        {cartItems.map((cartItem, i) => (\n          <div key={cartItem.variant_id}>\n            <p className='text-2xl font-bold underline'>CartItem {i}</p>\n            {Object.keys(cartItem).map((cartItemKey, i) => (\n              <p className='text-xl' key={i}>\n                <span>\n                  {cartItemKey}:{'  '}\n                </span>\n                {/* @ts-ignore */}\n                <span>{cartItem[cartItemKey]}</span>\n              </p>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n", "import { CartItem } from 'myTypes';\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useReducer,\n  useState,\n} from 'react';\n\ntype UseCartManagerResult = ReturnType<typeof useCartManager>;\n\nexport const CartContext = createContext<UseCartManagerResult>({\n  cartItems: [],\n  changeCartItemQuantity: () => {},\n  removeCartItem: () => {},\n  isCartOpen: false,\n  toggleIsCartOpen: () => {},\n});\n\ntype ActionType =\n  | { type: 'CHANGE_CART_QUANTITY'; cartItem: CartItem }\n  | { type: 'REMOVE_FROM_CART'; cartItem: CartItem };\n// | { type: 'UPDATE_PRICE'; payload: State };\n\nfunction useCartManager(initialCart: CartItem[]): {\n  cartItems: CartItem[];\n  changeCartItemQuantity: (cartItem: CartItem) => void;\n  removeCartItem: (cartItem: CartItem) => void;\n  isCartOpen: boolean;\n  toggleIsCartOpen: React.Dispatch<React.SetStateAction<boolean>>;\n} {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, dispatch] = useReducer(myCartReducerFunction, initialCart);\n  const changeCartItemQuantity = useCallback((cartItem: CartItem) => {\n    dispatch({ type: 'CHANGE_CART_QUANTITY', cartItem });\n  }, []);\n  const removeCartItem = useCallback((cartItem: CartItem) => {\n    dispatch({ type: 'REMOVE_FROM_CART', cartItem });\n  }, []);\n  return {\n    cartItems,\n    changeCartItemQuantity,\n    removeCartItem,\n    isCartOpen,\n    toggleIsCartOpen: setIsCartOpen,\n  };\n}\n\nconst myCartReducerFunction = (\n  cartItemsState: CartItem[],\n  action: ActionType\n) => {\n  const cartItemIndex = cartItemsState.findIndex(\n    (cartItem) =>\n      cartItem.name === action.cartItem.name &&\n      cartItem.grind === action.cartItem.grind\n  );\n  switch (action.type) {\n    case 'CHANGE_CART_QUANTITY':\n      if (cartItemIndex === -1) {\n        return [...cartItemsState, action.cartItem];\n      }\n      if (cartItemIndex > -1) {\n        const updatedCart = [...cartItemsState];\n        //quantity will be positive to increase, or -1 to decrease number in cart\n        cartItemsState[cartItemIndex].quantity += action.cartItem.quantity;\n        return updatedCart;\n      }\n    case 'REMOVE_FROM_CART':\n      console.log('REMOVE_FROM_CART');\n      const cartCopy = [...cartItemsState];\n      cartCopy.splice(cartItemIndex, 1);\n      return cartCopy;\n    // case 'UPDATE_PRICE':\n    //   console.log('UPDATE_PRICE', payload);\n\n    //   return {\n    //     ...state,\n    //     total: payload.total,\n    //   };\n    default:\n      throw new Error(`No case for action type found in cartReducer.`);\n  }\n};\n\nexport const CartProvider = ({\n  initialCart,\n  children,\n}: {\n  initialCart: CartItem[];\n  children: React.ReactNode;\n}) => {\n  return (\n    <CartContext.Provider value={useCartManager(initialCart)}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCartUtils = () => {\n  const { isCartOpen, toggleIsCartOpen } = useContext(CartContext);\n  return { isCartOpen, toggleIsCartOpen };\n};\n\nexport const useCartItems = (): CartItem[] => {\n  const { cartItems } = useContext(CartContext);\n  return cartItems;\n};\n\nexport const useChangeCartItemQuantity =\n  (): UseCartManagerResult['changeCartItemQuantity'] => {\n    const { changeCartItemQuantity } = useContext(CartContext);\n    return changeCartItemQuantity;\n  };\nexport const useRemoveFromCart = (): UseCartManagerResult['removeCartItem'] => {\n  const { removeCartItem } = useContext(CartContext);\n  return removeCartItem;\n};\n", "import { CartItem } from 'myTypes';\n\nexport default function calcTotalPrice(cartItems: CartItem[]) {\n  return cartItems.reduce((tally, cartItem) => {\n    return tally + cartItem.quantity * cartItem.price;\n  }, 0);\n}\n", "export default function formatMoney(amount = 0) {\n  const options = {\n    style: 'decimal',\n    // currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n\n  // check if its a clean dollar amount\n  // if (amount % 100 === 0) {\n  //   options.minimumFractionDigits = 0;\n  // }\n\n  const formatter = Intl.NumberFormat('en-US', options);\n\n  return formatter.format(amount / 100);\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function getTotalQuantityInCart(\n  coffeeId: string,\n  cartItems: CartItem[]\n) {\n  const totalQ = cartItems.reduce((tally, cartItem) => {\n    if (coffeeId === cartItem.coffeeId) {\n      return tally + cartItem.quantity;\n    } else return tally;\n  }, 0);\n  return totalQ;\n}\n", "import { CartItem } from 'myTypes';\nimport {\n  useCartItems,\n  useChangeCartItemQuantity,\n  useRemoveFromCart,\n} from '~/context/useCart';\nimport formatMoney from '~/lib/formatMoney';\nimport getTotalQuantityInCart from '~/lib/getTotalQuantityInCart';\n\nexport default function AdjustQuantityButtons({\n  cartItem,\n}: {\n  cartItem: CartItem;\n}) {\n  const changeCartItemQuantity = useChangeCartItemQuantity();\n  const removeFromCart = useRemoveFromCart();\n  const cartItems = useCartItems();\n\n  const totalQ = getTotalQuantityInCart(cartItem.coffeeId, cartItems);\n\n  return (\n    <div className='flex justify-between items-center'>\n      <div className='rounded-full flex justify-evenly mr-8 bg-green-600 h-9 w-[100px] items-center'>\n        <p>\n          <button\n            className='-mt-1 text-green-50'\n            disabled={cartItem.quantity < 1}\n            onClick={() => {\n              if (cartItem.quantity == 1) {\n                if (confirm(`remove ${cartItem.name} from cart?`)) {\n                  removeFromCart(cartItem);\n                }\n                return;\n              }\n              changeCartItemQuantity({\n                name: cartItem.name,\n                coffeeId: cartItem.coffeeId,\n                quantity: -1,\n                grind: cartItem.grind,\n                variant_id: cartItem.variant_id,\n                price: cartItem.price,\n                inStock: cartItem.inStock,\n              });\n            }}\n          >\n            <span className='text-2xl'>-</span>\n          </button>\n        </p>\n        <p className='mx-4 text-xl text-green-50'>{cartItem.quantity}</p>\n        <p>\n          <button\n            disabled={totalQ === cartItem.inStock || cartItem.inStock < totalQ}\n            className='-mt-1 text-green-50'\n            onClick={() =>\n              changeCartItemQuantity({\n                name: cartItem.name,\n                coffeeId: cartItem.coffeeId,\n                quantity: 1,\n                grind: cartItem.grind,\n                variant_id: cartItem.variant_id,\n                price: cartItem.price,\n                inStock: cartItem.inStock,\n              })\n            }\n          >\n            <span className='text-2xl'>+</span>\n          </button>\n        </p>\n      </div>\n      <p className='text-xl'>\n        {`$${formatMoney(cartItem.price * cartItem.quantity)} `}\n      </p>\n    </div>\n  );\n}\n", "import { CartItem } from 'myTypes';\nimport TrashIcon from '~/icons/TrashIcon';\nimport formatMoney from '~/lib/formatMoney';\nimport AdjustQuantityButtons from './AdjustQuantityButtons';\n\nexport default function CartListItem({ cartItem }: { cartItem: CartItem }) {\n  return (\n    <li className='p-4 border-b-2'>\n      <div className='mx-auto md:w-2/3'>\n        <div className='flex justify-between items-center'>\n          <h3 className='text-xl'>{cartItem.name}</h3>\n          {/* <div>\n            <button onClick={() => removeFromCart(cartItem)}>\n              <TrashIcon />\n            </button>\n          </div> */}\n        </div>\n        <div className='flex'>\n          <div>\n            <p className='text-sm mr-8 mb-2 text-slate-600'>{`${\n              cartItem.grind === 'whole' ? 'whole bean' : 'ground'\n            }`}</p>\n          </div>\n          <div className='pb-1 text-slate-600'>\n            <p className='text-sm'>{`$${formatMoney(cartItem.price)}`} </p>\n          </div>\n        </div>\n        <AdjustQuantityButtons cartItem={cartItem} />\n      </div>\n    </li>\n  );\n}\n", "import { useCartItems, useCartUtils } from '~/context/useCart';\nimport calcTotalPrice from '~/lib/calcCartTotal';\nimport formatMoney from '~/lib/formatMoney';\nimport CartListItem from './CartListItem';\n\nexport default function CartSummary() {\n  const cartItems = useCartItems();\n  const subtotal = calcTotalPrice(cartItems);\n  const shipping = subtotal < 4999 ? 1000 : 0;\n  return (\n    <div>\n      <div>\n        <ul>\n          {cartItems.map((cartItem) => (\n            <CartListItem key={cartItem.coffeeId} cartItem={cartItem} />\n          ))}\n        </ul>\n      </div>\n      <div className='flex flex-col p-4 text-right '>\n        <p className='text-xl text-slate-600'>\n          Subtotal: <span className='ml-2'>{`$${formatMoney(subtotal)}`}</span>\n        </p>\n        <p className='text-xl text-slate-600'>\n          Shipping: <span className='ml-2'>{`$${formatMoney(shipping)}`}</span>\n        </p>\n        <p className='text-2xl py-1'>\n          Total:{' '}\n          <span className='ml-2'>{`$${formatMoney(subtotal + shipping)}`}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n", "export default function CoffeeCupIcon({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 28 28'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <path d='M22 10h1a4 4 0 0 1 0 8h-1'></path>\n      <path d='M2 8h20v15a4 10 0 0 1-4 4H6a4 10 0 0 1-4-4V8z'></path>\n      <line x1='8' y1='1' x2='8' y2='4'></line>\n      <line x1='12' y1='1' x2='12' y2='4'></line>\n      <line x1='16' y1='1' x2='16' y2='4'></line>\n    </svg>\n  );\n}\n", "import { CartItem } from 'myTypes';\nimport { useCartItems } from '~/context/useCart';\n\nexport default function CartCount() {\n  const cartItems = useCartItems();\n\n  function calcTotalQuantity(cartItems: CartItem[]) {\n    return cartItems.reduce((tally, cartItem) => {\n      return tally + cartItem.quantity;\n    }, 0);\n  }\n  if (calcTotalQuantity(cartItems) === 0) {\n    return null;\n  }\n  return (\n    <div className='bg-red-500 text-red-50 p-[1px] leading-5 min-w-[18px] h-[18px] mr-[5px] mt-2 text-sm row-span-full col-span-full rounded-full'>\n      <p className='-mt-[2px]'>{calcTotalQuantity(cartItems)}</p>\n    </div>\n  );\n}\n", "import sanityClient from '@sanity/client';\n\nexport default sanityClient({\n  // Find your project ID and dataset in `sanity.json` in your studio project\n  projectId: process.env.SANITY_PROJECT_ID,\n  dataset: 'production',\n  useCdn: true,\n  apiVersion: '2022-03-06',\n  token: process.env.SANITY_API_TOKEN ?? ``,\n\n  // useCdn == true gives fast, cheap responses using a globally distributed cache.\n  // Set this to false if your application require the freshest possible\n  // data always (potentially slightly slower and a bit more expensive).\n});\n// will need auth client to fetch draft docs and mutations\n", "import { Form, Link, useSearchParams } from '@remix-run/react';\nimport CartSummary from '~/components/CartSummary';\nimport { useCartItems } from '~/context/useCart';\n\nexport default function CheckoutPage() {\n  const cartItems = useCartItems();\n  const [searchParams] = useSearchParams();\n  const warnings = searchParams.getAll('warnings');\n  console.log('warnings', warnings);\n\n  // review cart, and on confirmation, send cart to '/checkout' action via form submission\n  // if the action finds errors of price or stock, it will redirect back to this page with warnings in the url query string\n  return (\n    <div>\n      <h2 className='text-center text-xl p-1'>Review Your Cart</h2>\n      <CartSummary />\n      <div className='text-center'>\n        <Form method='post' action='/pay'>\n          {warnings && (\n            <div>\n              <ul>\n                {warnings.map((warning, i) => (\n                  <li key={i}>{warning}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <button type='submit' name='cart' value={JSON.stringify(cartItems)}>\n            looks good!\n          </button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport { retrievePaymentIntent } from '~/lib/stripePaymentIntent';\n\nexport const loader = async ({ request }) => {\n  const url = new URL(request.url);\n  const id = url.searchParams.get('payment_intent');\n  return await retrievePaymentIntent(id);\n};\nexport default function success() {\n  const paymentIntent = useLoaderData();\n  console.log('paymentIntent', paymentIntent);\n  return (\n    <div>\n      Thank you\n      <pre>{JSON.stringify(paymentIntent, null, 2)}</pre>\n    </div>\n  );\n}\n", "import Stripe from 'stripe';\n\n// The docs do not show the config being required, because it's optional when using vanilla javascript. When using typescript it's required because the types are pinned to a specific API version.\n// https://github.com/stripe/stripe-node#usage-with-typescript\n/*@ts-ignore*/\nconst stripe = new Stripe(process.env.STRIPE_TEST_SECRET_KEY, {\n  apiVersion: '2022-08-01',\n});\n\nexport async function createPaymentIntent(total: number) {\n  return await stripe.paymentIntents.create({\n    amount: total,\n    currency: 'usd',\n    automatic_payment_methods: {\n      enabled: true,\n    },\n  });\n}\n//helper for fetching PaymentIntent server side\nexport async function retrievePaymentIntent(id: string) {\n  return await stripe.paymentIntents.retrieve(id);\n}\n", "import { Outlet } from \"@remix-run/react\";\n\nfunction coffeeOutlet() {\n  return <Outlet />;\n}\n\nexport default coffeeOutlet;\n", "import type { ActionFunction, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { useCatch, useLoaderData, useParams } from \"@remix-run/react\";\nimport { filterDataToSingleItem } from '~/lib/sanity/filterDataToSingleItem';\nimport type { Coffee } from '../../../sanityTypes';\nimport { useState } from 'react';\nimport Preview from '~/components/Preview';\nimport { getClient } from '~/lib/sanity/getClient';\nimport { PortableText, urlFor } from '~/lib/sanity/helpers';\nimport AddToCartForm from '~/components/AddToCartForm';\nimport { CartProvider } from '~/context/useCart';\n\ntype LoaderData = {\n  initialData: Coffee[];\n  preview: boolean;\n  singleCoffeeQuery?: string | null;\n  queryParams?: { slug: string | undefined } | null;\n};\n\n//Route params are passed to your loader.\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const requestUrl = new URL(request?.url);\n  const preview =\n    requestUrl?.searchParams?.get('preview') ===\n    process.env.SANITY_PREVIEW_SECRET;\n\n  // Query for _all_ documents with this slug\n  // There could be two: Draft and Published!\n\n  //in this query, '$' character before 'slug' denotes that slug will is a string template, provided in second argument of the fetch function call\n  const singleCoffeeQuery = `*[_type == \"coffee\" && slug.current == $slug]`;\n  const queryParams = { slug: params.coffeeSlug };\n  const initialData = await getClient(preview).fetch(\n    singleCoffeeQuery,\n    queryParams\n  );\n  if (!initialData) {\n    throw new Response('Oh no - that Coffee was not found!', {\n      status: 404,\n      statusText: 'That coffee was not found',\n    });\n  }\n\n  const data: LoaderData = {\n    initialData,\n    preview,\n    singleCoffeeQuery: preview ? singleCoffeeQuery : null,\n    queryParams: preview ? queryParams : null,\n  };\n\n  return data;\n};\n\nexport default function CoffeeRoute() {\n  let { initialData, preview, singleCoffeeQuery, queryParams } =\n    useLoaderData<LoaderData>();\n\n  // If `preview` mode is active, its component update this state for us\n  const [data, setData] = useState(initialData);\n\n  //  A helper function checks the returned documents\n  // To show Draft if in preview mode, otherwise Published\n  const coffee = filterDataToSingleItem(data, preview);\n\n  return (\n    <main className='h-screen'>\n      {preview && (\n        <Preview\n          data={data}\n          setData={setData}\n          query={singleCoffeeQuery}\n          queryParams={queryParams}\n        />\n      )}\n      {/* When working with draft content, optional chain _everything_ */}\n      <div className='w-5/6 bg-slate-50 mx-auto max-w-[800px] p-4 mt-4 rounded shadow'>\n        {coffee?.name && (\n          <h2 className='text-3xl text-center font-HindSiliguri'>\n            {coffee.name}\n          </h2>\n        )}\n        {coffee?.roastLevel && (\n          <p className='text-center'>{coffee.roastLevel} roast</p>\n        )}\n        {coffee?.image && (\n          <img\n            loading='lazy'\n            src={urlFor(coffee.image).width(400).height(200)}\n            width='400'\n            height='200'\n            alt={coffee?.name ?? ``}\n            className='m-auto py-7'\n          />\n        )}\n        {coffee?.descriptionLong && (\n          <PortableText value={coffee.descriptionLong} />\n        )}\n        <div className='flex flex-wrap gap-4 justify-center'>\n          <dl className='w-[300px] pr-5'>\n            {coffee?.roastDate && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className=' font-ZenKaku justify-self-start text-lg mr-3'>\n                    roasted\n                  </dt>\n                  <dd>{coffee.roastDate}</dd>\n                </>\n              </div>\n            )}\n            {coffee?.grade && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className='justify-self-start text-lg mr-3'>grade</dt>\n                  <dd>{coffee.grade}</dd>\n                </>\n              </div>\n            )}\n            {coffee?.region && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className='justify-self-start text-lg mr-3'>region</dt>\n                  <dd>{coffee.region}</dd>\n                </>\n              </div>\n            )}\n            {coffee?.cultivar && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className='justify-self-start text-lg mr-3'>cultivar</dt>\n                  <dd>{coffee.cultivar}</dd>\n                </>\n              </div>\n            )}\n            {coffee?.elevation && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className='justify-self-start text-lg mr-3'>elevation</dt>\n                  <dd>{coffee.elevation}</dd>\n                </>\n              </div>\n            )}\n            {coffee?.process && (\n              <div className='flex py-2 ml-3 flex-row items-baseline'>\n                <>\n                  <dt className='justify-self-start text-lg mr-3'>process</dt>\n                  <dd>{coffee.process}</dd>\n                </>\n              </div>\n            )}\n          </dl>\n\n          {coffee?.stock && coffee?.stock > 0 ? (\n            <AddToCartForm coffee={coffee} />\n          ) : (\n            <p>out of stock</p>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div className='error-container'>\n          Huh? What the heck is {params.coffeeSlug}?\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  const { coffeeSlug } = useParams();\n  return (\n    <div className='error-container'>{`There was an error loading coffee ${coffeeSlug}. Sorry.`}</div>\n  );\n}\n\n// export const meta: MetaFunction = ({\n//   data,\n// }: {\n//   data: LoaderData | undefined;\n// }) => {\n//   if (!data) {\n//     return {\n//       title: 'No coffee',\n//       description: 'No coffee found',\n//     };\n//   }\n//   return {\n//     title: `${data.coffee.name}`,\n//     description: `Enjoy a hot cup of  \"${data.coffee.name}\" coffee`,\n//   };\n// };\n", "import { Coffee } from 'sanityTypes';\n\nexport function filterDataToSingleItem(\n  data: Coffee[] = [],\n  preview: Boolean = false\n) {\n  if (!Array.isArray(data)) {\n    return data;\n  }\n\n  if (data.length === 1) {\n    return data[0];\n  }\n\n  if (preview) {\n    return data.find((item) => item._id.startsWith(`drafts.`)) || data[0];\n  }\n\n  return data[0];\n}\n", "import { useEffect } from 'react';\n\nimport { usePreviewSubscription } from '~/lib/sanity/usePreviewSubscription';\n\nexport default function Preview({\n  data,\n  setData,\n  query,\n  queryParams,\n}: {\n  data: any;\n  setData: any;\n  query: any;\n  queryParams: any;\n}) {\n  const { data: previewData } = usePreviewSubscription(query, {\n    params: queryParams,\n    initialData: data,\n    enabled: true,\n  });\n\n  useEffect(() => setData(previewData), [previewData]);\n\n  return (\n    <div className='pointer-events-none fixed inset-0 z-50 flex items-start justify-center p-2'>\n      <div className='flex items-center gap-x-2 rounded bg-pink-500 p-1 font-bold text-white shadow-lg'>\n        <span className='inline-block p-2'>Preview Mode</span>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport { groqStore, GroqStore } from '@sanity/groq-store';\n\nimport { config } from './config';\n\ninterface SubscriptionOptions<R = any> {\n  enabled?: boolean;\n  params?: Record<string, unknown>;\n  initialData?: R;\n}\n\nexport function usePreviewSubscription(\n  query: string,\n  subscriptionOptions: SubscriptionOptions\n) {\n  const { enabled, params, initialData } = subscriptionOptions;\n  const [data, setData] = useState(initialData);\n\n  useEffect(() => {\n    let sub: any;\n    let store: GroqStore | undefined;\n\n    async function createStore() {\n      // For more details about configuring groq-store see:\n      // https://www.npmjs.com/package/@sanity/groq-store\n\n      const { projectId, dataset } = config;\n\n      store = groqStore({\n        projectId,\n        dataset,\n        // Keep dataset up to date with remote changes. Default: false\n        listen: true,\n\n        // \"Replaces\" published documents with drafts, if available.\n        // Note that document IDs will not reflect draft status, currently\n        overlayDrafts: true,\n\n        // Optional token, if you want to receive drafts, or read data from private datasets\n        // NOTE: Does _not_ work in browsers (yet)\n        //token: token\n        documentLimit: 1000,\n      });\n\n      store.subscribe(query, params ?? {}, (err: any, result: any) => {\n        if (err) {\n          console.error('Oh no, an error:', err);\n          return;\n        }\n        setData(result);\n      });\n    }\n\n    if (enabled) {\n      createStore();\n    }\n\n    return () => {\n      if (sub?.unsubscribe()) sub.unsubscribe();\n      if (store) store.close();\n    };\n  }, []);\n\n  return { data };\n}\n", "interface ClientConfig {\n  apiVersion: string;\n  dataset: string;\n  projectId: string;\n  useCdn: boolean;\n}\n\n// // _probably_ a way to actually pull these from the getEnv.ts file\n// type EnvKey = 'NODE_ENV' | 'SANITY_DATASET' | 'SANITY_PROJECT_ID'\n\n// function getEnvByKey(key: EnvKey) {\n//   return typeof window === 'undefined' ? process.env[key] : window?.ENV[key]\n// }\n\nexport const config: ClientConfig = {\n  apiVersion: '2021-03-25',\n  dataset: 'production',\n  projectId: 't9guxb1x',\n  useCdn: false,\n};\n", "// The 'next-sanity' implementation uses the full @sanity/client\n// Since we don't need to do mutation, we can just use PicoSanity instead\n// (Also, @sanity/client was giving me drama)\nimport PicoSanity from 'picosanity';\n\nimport { config } from './config';\n\n// Set up the client for fetching data in the getProps page functions\nexport const sanityClient = new PicoSanity(config);\n\n// Set up a preview client with serverless authentication for drafts\nexport const previewClient = new PicoSanity({\n  ...config,\n  useCdn: false,\n  token:\n    typeof window === 'undefined' && process\n      ? process.env.SANITY_API_TOKEN\n      : ``,\n});\n\n// Helper function for easily switching between normal client and preview client\nexport const getClient = (usePreview = false) =>\n  usePreview ? previewClient : sanityClient;\n\n// Quick client for querying community posts\nexport const communityClient = new PicoSanity({\n  ...config,\n  projectId: `t9guxb1x`,\n});\n", "import imageUrlBuilder from '@sanity/image-url';\nimport { PortableText as PortableTextComponent } from '@portabletext/react';\n\nimport { config } from './config';\n\nexport const urlFor = (source) => imageUrlBuilder(config).image(source);\n\nexport function PortableText(props) {\n  return <PortableTextComponent {...props} />;\n}\n", "import { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport {\n  useChangeCartItemQuantity,\n  useCartItems,\n  useCartUtils,\n} from '~/context/useCart';\nimport MinusSvg from '~/icons/MinusSvg';\nimport PlusSvg from '~/icons/PlusSvg';\nimport type { Coffee } from '../../sanityTypes';\nimport getTotalQuantityInCart from '~/lib/getTotalQuantityInCart';\nimport StockAlert from './StockAlert';\n\nexport default function AddToCartForm({ coffee }: { coffee: Coffee }) {\n  const [grind, setGrind] = useState('whole');\n  const [desiredQuantity, setDesiredQuantity] = useState<number>(1);\n  const cartItems = useCartItems();\n  const changeCartItemQuantity = useChangeCartItemQuantity();\n  const { toggleIsCartOpen } = useCartUtils();\n\n  const handleGrindChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setGrind(e.target.value);\n  };\n  const totalCartQuantity = getTotalQuantityInCart(coffee._id, cartItems);\n\n  return (\n    <>\n      <Form\n        action='POST'\n        onSubmit={(e) => {\n          e.preventDefault();\n          changeCartItemQuantity({\n            name: `${coffee.name}`,\n            coffeeId: `${coffee._id}`,\n            quantity: desiredQuantity,\n            grind,\n            variant_id: `${coffee._id + grind}`,\n            price: coffee.price,\n            inStock: coffee.stock,\n          });\n          toggleIsCartOpen(true);\n        }}\n        className='w-[300px] h-[400px] bg-slate-400 p-2'\n      >\n        <fieldset>\n          <button\n            disabled={totalCartQuantity + desiredQuantity > coffee.stock}\n            className='text-xl bg-slate-50'\n            type='submit'\n          >\n            Add {desiredQuantity} to Cart\n          </button>\n\n          <div className='grindRadio'>\n            <label htmlFor='whole' className=''>\n              <input\n                type='radio'\n                id='whole'\n                name='grind'\n                value={'whole'}\n                checked={grind === 'whole'}\n                onChange={handleGrindChange}\n              />\n              Whole Bean\n            </label>\n            <label htmlFor='ground' className=''>\n              <input\n                type='radio'\n                id='ground'\n                name='grind'\n                value={'ground'}\n                checked={grind === 'ground'}\n                onChange={handleGrindChange}\n              />\n              Ground\n            </label>\n          </div>\n\n          <div className='flex place-content-center my-4'>\n            <label className='mr-5'>quantity:</label>\n            <div className='flex flex-col'>\n              <div className='flex'>\n                <button\n                  type='button'\n                  disabled={desiredQuantity === 1}\n                  onClick={() => setDesiredQuantity(desiredQuantity - 1)}\n                >\n                  <MinusSvg />\n                </button>\n                <p className='mx-5 text-xl'>{desiredQuantity}</p>\n                <button\n                  type='button'\n                  disabled={\n                    totalCartQuantity + desiredQuantity === coffee.stock ||\n                    totalCartQuantity + desiredQuantity > coffee.stock\n                  }\n                  onClick={() => setDesiredQuantity(desiredQuantity + 1)}\n                >\n                  <PlusSvg w={'18'} h={'18'} />\n                </button>\n              </div>\n            </div>\n          </div>\n          {totalCartQuantity > 0 && (\n            <p>\n              {totalCartQuantity} {coffee.name} in your cart\n            </p>\n          )}\n          {totalCartQuantity + desiredQuantity === coffee.stock ||\n          totalCartQuantity + desiredQuantity > coffee.stock ? (\n            <p>there are only {coffee.stock} in stock</p>\n          ) : null}\n        </fieldset>\n      </Form>\n      <div>\n        <p>current cart:</p>\n        {JSON.stringify(cartItems)}\n      </div>\n    </>\n  );\n}\n", "export default function MinusSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <line x1='5' y1='12' x2='19' y2='12'></line>\n    </svg>\n  );\n}\n", "export default function PlusSvg({ w = '20', h = '20' }) {\n  return (\n    <svg width={w} height={h} viewBox='0 0 23 23'>\n      <path\n        fill='transparent'\n        strokeWidth='2'\n        stroke='currentColor'\n        strokeLinecap='round'\n        opacity='1'\n        d='M 11 .5 L 11 18.346'\n      ></path>\n      <path\n        fill='transparent'\n        strokeWidth='2'\n        stroke='currentColor'\n        strokeLinecap='round'\n        opacity='1'\n        d='M 2 9.423 L 20 9.423'\n      ></path>\n    </svg>\n  );\n}\n", "import { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData, useMatches } from \"@remix-run/react\";\nimport sanity from '~/lib/sanity/sanity';\nimport AllCoffee from '~/components/AllCoffee';\nimport { Coffee } from 'sanityTypes';\n\nconst query = `\n*[_type == \"coffee\" && !(_id in path('drafts.**'))] {\n  _id,\n  name,\n  stock,\n  roastLevel,\n  roastDate,\n  description,\nslug{current}\nprice\n}\n`;\n\ninterface LoaderData {\n  coffee: Coffee[];\n  referringPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const requestUrl = new URL(request?.url);\n  const referringPath = requestUrl.pathname;\n  const coffee = await sanity.fetch(query);\n  const data: LoaderData = { coffee, referringPath };\n  return data;\n};\n\nfunction coffeeIndex() {\n  const data = useLoaderData();\n  console.log('data', data);\n\n  return (\n    <AllCoffee\n      allCoffee={data.coffee}\n      referringPath={data.referringPath + '/'}\n    />\n  );\n}\n\nexport default coffeeIndex;\n", "import dayjs from 'dayjs';\nimport { Link } from \"@remix-run/react\";\nimport type { Coffee } from '../../sanityTypes';\n\n// this card is a link that routes to the specific page for that coffee.  The link is used on the home page ('/') AND on the all coffees page ('/coffee), each of which have a different base url, so the correct url href passed to Link is constructed at the same component as the loader, where the requesting url is obtained, and in the case of the home page, a relative '/coffee' is prepended to the slug, whereas at the /coffee index, just a '/' is prepended\n\nfunction CoffeeCard({\n  coffee,\n  referringPath,\n}: {\n  coffee: Coffee;\n  referringPath: string;\n}) {\n  const link = referringPath + coffee?.slug?.current;\n  return (\n    <Link to={link}>\n      <div className='p-4 border-8 border-green-200 bg-green-500 rounded shadow text-green-50 w-[300px] h-[300px] mb-1 flex flex-col justify-between'>\n        <div className='h-1/6 grid place-items-center'>\n          <h2 className='text-2xl font-normal'>{coffee.name}</h2>\n        </div>\n        <div className='flex flex-col flex-grow justify-center items-center space-y-4'>\n          {coffee.roastLevel && <p>{coffee.roastLevel} roast</p>}\n          {coffee.description && <p>{coffee.description}</p>}\n          {coffee.roastDate && (\n            <p>roasted {dayjs(coffee.roastDate).format('MMMM DD')}</p>\n          )}\n        </div>\n        <div className='h-1/6 grid place-items-center'>\n          <p>{coffee.stock} in stock</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default CoffeeCard;\n", "import type { Coffee } from '../../sanityTypes';\nimport CoffeeCard from './CoffeeCard';\n\nfunction FeaturedItems({\n  allCoffee,\n  referringPath,\n}: {\n  allCoffee: Coffee[];\n  referringPath: string;\n}) {\n  return (\n    <main className='px-4 py-2 w-full flex flex-col items-center'>\n      <div className='py-3'>\n        <h2 className='text-2xl font-medium'>Our Coffees</h2>\n      </div>\n      <div className='py-2 flex flex-wrap justify-center gap-4'>\n        {allCoffee.map((coffee) => (\n          <CoffeeCard\n            key={coffee.name}\n            coffee={coffee}\n            referringPath={referringPath}\n          />\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default FeaturedItems;\n", "export default function eventsPage() {\n  return <div>events</div>;\n}\n", "export default function aboutPage() {\n  return <div>about</div>;\n}\n", "import { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData, useMatches } from \"@remix-run/react\";\nimport sanity from '~/lib/sanity/sanity';\nimport type { Coffee, LandingPage } from '../../sanityTypes';\n\nimport HomeHero from '~/components/HomeHero';\nimport FeaturedItems from '~/components/FeaturedItems';\n\nconst contentQuery = `{\n  \"heroContent\": *[_id == \"homePage\" ] {\n  \"imageUrl\": bgImage1.asset->url,\n  overlayText1\n  }[0],\n  \"coffee\": *[_type == \"coffee\" && !(_id in path('drafts.**'))] {\n    name, \n    roastLevel,\n    description,\n    roastDate,\n    stock, slug{current}\n  }\n}`;\n\ninterface LoaderData {\n  coffee: Coffee[];\n  heroContent: LandingPage;\n  referringPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const requestUrl = new URL(request?.url);\n  const referringPath = requestUrl.pathname;\n\n  const content = await sanity.fetch(contentQuery);\n  const data: LoaderData = {\n    coffee: content.coffee,\n    heroContent: content.heroContent,\n    referringPath: referringPath,\n  };\n  return data;\n};\n\nexport default function Index() {\n  const data = useLoaderData<LoaderData>();\n\n  return (\n    <main>\n      <HomeHero heroContent={data.heroContent} />\n      <FeaturedItems\n        allCoffee={data.coffee}\n        referringPath={data.referringPath + 'coffee/'}\n      />\n    </main>\n  );\n}\n", "import type { LandingPage } from '../../sanityTypes';\n// import PortableText from 'react-portable-text';\nimport { PortableText } from '@portabletext/react';\n\nexport default function HomeHero({\n  heroContent,\n}: {\n  heroContent: LandingPage;\n}) {\n  const blockContent = heroContent.overlayText1;\n  if (!heroContent.imageUrl && !heroContent.overlayText1) return null;\n  return (\n    <div className='grid place-content-center bg-slate-50 w-screen'>\n      <img\n        className='row-span-full col-span-full w-screen'\n        src={heroContent.imageUrl}\n      />\n      {heroContent.overlayText1 && (\n        <div className='grid row-span-full col-span-full relative place-items-center  '>\n          <div className='bg-slate-900/50 text-slate-50 w-2/3 p-[5%] text-center'>\n            {heroContent.overlayText1 && (\n              <PortableText value={heroContent.overlayText1} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import type { Coffee } from '../../sanityTypes';\nimport CoffeeCard from './CoffeeCard';\n\nfunction FeaturedItems({\n  allCoffee,\n  referringPath,\n}: {\n  allCoffee: Coffee[];\n  referringPath: string;\n}) {\n  return (\n    <div className='px-4 py-2 w-full flex flex-col items-center'>\n      <div className='py-2'>\n        <h2 className='text-2xl font-medium'>Featured Items Heading</h2>\n      </div>\n      <div className='py-2 flex flex-wrap justify-center gap-4'>\n        {allCoffee.map((coffee) => (\n          <CoffeeCard\n            key={coffee.name}\n            coffee={coffee}\n            referringPath={referringPath}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedItems;\n", "import { ActionArgs, redirect } from '@remix-run/node';\nimport { Outlet, useActionData } from '@remix-run/react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport invariant from 'tiny-invariant';\nimport { createPaymentIntent } from '~/lib/stripePaymentIntent';\nconst stripePromise = loadStripe('pk_test_CkfBPTwVc1IMB6BXSDsSytR8');\nimport reduceCartByName from '~/lib/reduceCartByName';\nimport { Coffee } from 'sanityTypes';\nimport sanityClient from '~/lib/sanity/sanity';\nimport checkAvailability from '~/lib/checkAvailability';\nimport calcVerifiedTotal from '~/lib/calcVerifiedTotal';\n\nexport const action = async ({ request }: ActionArgs) => {\n  const body = await request.formData();\n  const res = body.get('cart');\n  invariant(\n    typeof res === 'string',\n    'cart not submitted properly; must be a string'\n  );\n  const cart = JSON.parse(res);\n  //create an OBJ of cart Items keyed by price and quantity, regardless of whole bean or ground, to query sanity and calculate total cost\n  const cartKeyedByName = reduceCartByName(cart);\n  console.log('cartKeyedByName', cartKeyedByName);\n\n  // create array of coffeeNames that need to be queried in Sanity\n  const coffeeInCart: string[] = Object.keys(cartKeyedByName);\n\n  // query Sanity to verify prices and stock\n  const sanityQuery = `*[_type == \"coffee\" && name in ${JSON.stringify(\n    coffeeInCart\n  )} && !(_id in path(\"drafts.**\"))] {name, price, stock}\n    `;\n  const sanityResponse: Coffee[] = await sanityClient.fetch(sanityQuery);\n  // is product still in db?, and if so, does available stock satisfy what is quantity in the cart?\n\n  const availableCoffee = sanityResponse.map((item) => item.name);\n  // set current prices and inStock onto each CartItem\n  sanityResponse.forEach((coffee) => {\n    let key: string = coffee.name;\n    cartKeyedByName[key].price = coffee.price;\n    cartKeyedByName[key].inStock = coffee.stock;\n  });\n  //separate function to check response availability against order\n\n  const warningMessages = checkAvailability(cartKeyedByName, availableCoffee);\n  //calculate total with shipping based on verified prices\n\n  // if any insufficientStock or unavailable, return to reviewCart page with message to client in url query string\n  if (warningMessages.length > 0) {\n    return redirect(\n      `reviewCart/?warnings=${warningMessages.join('&warnings=')}`\n    );\n  }\n\n  const total = calcVerifiedTotal(cartKeyedByName);\n  return await createPaymentIntent(total);\n};\n\nexport default function Pay() {\n  const paymentIntent = useActionData();\n  return (\n    <div>\n      <h1>Pay</h1>\n      <Elements\n        stripe={stripePromise}\n        options={{ clientSecret: paymentIntent.client_secret }}\n      >\n        <Outlet />\n      </Elements>\n    </div>\n  );\n}\n", "import { CartItem, KeyedCartItem } from 'myTypes';\n\nexport default function reduceCartByName(cart: CartItem[]) {\n  const keyedCart = cart.reduce((acc, cartItem) => {\n    let key: string = cartItem.name;\n    // const quantity = cartItem.quantity;\n    if (acc[key]) {\n      acc[key].quantity = acc[key].quantity + cartItem.quantity;\n      return acc;\n    } else\n      return {\n        ...acc,\n        [key]: {\n          ...cartItem,\n        },\n      };\n  }, {} as Record<string, CartItem>);\n  return keyedCart;\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function checkAvailability(\n  cartKeyedByName: Record<string, CartItem>,\n  availableCoffee: string[]\n) {\n  const warningMessages = [];\n  for (const itemName in cartKeyedByName) {\n    if (\n      cartKeyedByName[itemName].inStock < cartKeyedByName[itemName].quantity\n    ) {\n      warningMessages.push(\n        `There are only ${cartKeyedByName[itemName].inStock} ${itemName} in stock`\n      );\n      // cartKeyedByName[itemName].insufficientStock = true;\n    }\n    if (!availableCoffee.includes(cartKeyedByName[itemName].name)) {\n      warningMessages.push(`${itemName} is no longer available`);\n      // cartKeyedByName[itemName].unavailable = true;\n    }\n  }\n  return warningMessages;\n}\n", "import { KeyedCartItem } from 'myTypes';\n\nexport default function calcVerifiedTotal(\n  obj: Record<string, KeyedCartItem>\n): number {\n  //stripe paymentIntent wants the amount to be in smallest currency unit (i.e. cents)\n  let total = 0;\n  for (const item in obj) {\n    const itemTotal = obj[item].price * obj[item].quantity;\n    total += itemTotal;\n  }\n  // add $10 shipping if less than 5000\n  if (total < 4999) {\n    total += 1000;\n  }\n  return total;\n}\n", "import { Form } from '@remix-run/react';\nimport {\n  PaymentElement,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js';\n\nexport default function Index() {\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: 'http://localhost:3000/success',\n      },\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit} method='post'>\n      <PaymentElement />\n      <button>confirm payment</button>\n    </Form>\n  );\n}\n", "export default {'version':'36320ce5','entry':{'module':'/build/entry.client-Q5GFHRN7.js','imports':['/build/_shared/chunk-5GDU6E6N.js','/build/_shared/chunk-R5FI2U2M.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EP3W3VCK.js','imports':['/build/_shared/chunk-UCJPNULU.js','/build/_shared/chunk-NOCVMNVF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-DUYSOY6W.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/coffee':{'id':'routes/coffee','parentId':'root','path':'coffee','index':undefined,'caseSensitive':undefined,'module':'/build/routes/coffee-2WKTG7I2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/coffee/$coffeeSlug':{'id':'routes/coffee/$coffeeSlug','parentId':'routes/coffee','path':':coffeeSlug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/coffee/$coffeeSlug-TLAICS7T.js','imports':['/build/_shared/chunk-3BN3JY7S.js','/build/_shared/chunk-NOCVMNVF.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/coffee/index':{'id':'routes/coffee/index','parentId':'routes/coffee','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/coffee/index-KYCUBHFV.js','imports':['/build/_shared/chunk-BKEPGF6V.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/events':{'id':'routes/events','parentId':'root','path':'events','index':undefined,'caseSensitive':undefined,'module':'/build/routes/events-2F7I2OTU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-GEU5YO34.js','imports':['/build/_shared/chunk-3BN3JY7S.js','/build/_shared/chunk-BKEPGF6V.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pay':{'id':'routes/pay','parentId':'root','path':'pay','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pay-A3B4CSAC.js','imports':['/build/_shared/chunk-VVPBCJTC.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pay/index':{'id':'routes/pay/index','parentId':'routes/pay','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/pay/index-LWUSJ2QI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reviewCart':{'id':'routes/reviewCart','parentId':'root','path':'reviewCart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reviewCart-JR62VAOV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/success':{'id':'routes/success','parentId':'root','path':'success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/success-IQ27PZOE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-36320CE5.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/reviewCart.tsx\";\nimport * as route2 from \"./routes/success.tsx\";\nimport * as route3 from \"./routes/coffee.tsx\";\nimport * as route4 from \"./routes/coffee/$coffeeSlug.tsx\";\nimport * as route5 from \"./routes/coffee/index.tsx\";\nimport * as route6 from \"./routes/events.tsx\";\nimport * as route7 from \"./routes/about.tsx\";\nimport * as route8 from \"./routes/index.tsx\";\nimport * as route9 from \"./routes/pay.tsx\";\nimport * as route10 from \"./routes/pay/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/reviewCart\": {\n      id: \"routes/reviewCart\",\n      parentId: \"root\",\n      path: \"reviewCart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/success\": {\n      id: \"routes/success\",\n      parentId: \"root\",\n      path: \"success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/coffee\": {\n      id: \"routes/coffee\",\n      parentId: \"root\",\n      path: \"coffee\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/coffee/$coffeeSlug\": {\n      id: \"routes/coffee/$coffeeSlug\",\n      parentId: \"routes/coffee\",\n      path: \":coffeeSlug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/coffee/index\": {\n      id: \"routes/coffee/index\",\n      parentId: \"routes/coffee\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/events\": {\n      id: \"routes/events\",\n      parentId: \"root\",\n      path: \"events\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/pay\": {\n      id: \"routes/pay\",\n      parentId: \"root\",\n      path: \"pay\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/pay/index\": {\n      id: \"routes/pay/index\",\n      parentId: \"routes/pay\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": ["links", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "action", "i", "cartItems", "sanityClient", "links", "import_react", "loader", "import_react", "Stripe", "loader", "import_react", "CatchBoundary", "ErrorBoundary", "loader", "import_react", "import_react", "import_react", "import_react", "query", "query", "sanityClient", "PicoSanity", "import_react", "imageUrlBuilder", "PortableTextComponent", "import_react", "loader", "CatchBoundary", "ErrorBoundary", "coffee_exports", "coffee_default", "loader", "import_react", "import_react", "dayjs", "loader", "coffee_default", "loader", "import_react", "import_react", "FeaturedItems", "loader", "import_react", "invariant", "pay_exports", "Index", "import_react", "import_react_stripe_js", "stripe", "coffee_exports", "pay_exports"]
}
