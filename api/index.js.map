{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/components/DesktopNav.tsx", "../app/components/MobileNav.tsx", "../app/icons/InstagramSvg.tsx", "../app/icons/XSvg.tsx", "../app/icons/MenuSvg.tsx", "../app/components/Cart.tsx", "../app/context/useCart.tsx", "../app/lib/calcCartTotal.ts", "../app/lib/formatMoney.ts", "../app/components/AdjustQuantityButtons.tsx", "../app/lib/getTotalQuantityInCart.ts", "../app/components/CartListItem.tsx", "../app/components/CartSummary.tsx", "../app/icons/CoffeeCupIcon.tsx", "../app/components/CartCount.tsx", "../app/lib/sanity/sanity.tsx", "../app/routes/coffee/$coffeeSlug.tsx", "../app/lib/sanity/filterDataToSingleItem.js", "../app/components/Preview.tsx", "../app/lib/sanity/usePreviewSubscription.tsx", "../app/lib/sanity/config.ts", "../app/lib/sanity/getClient.tsx", "../app/lib/sanity/helpers.js", "../app/components/AddToCartForm.tsx", "../app/icons/MinusSvg.tsx", "../app/icons/PlusSvg.tsx", "../app/components/styledContainers/ContentContainer.tsx", "../app/routes/stripeWebhook.tsx", "../node_modules/nanoid/index.js", "../app/lib/sanity/writeOrder.tsx", "../app/routes/coffee/index.tsx", "../app/components/CoffeeCard.tsx", "../app/components/AllCoffee.tsx", "../app/routes/blog/$slug.tsx", "../app/routes/blog/index.tsx", "../app/routes/reviewCart.tsx", "../app/components/CheckoutFormField.tsx", "../app/components/styledContainers/FieldsetGroup.tsx", "../app/components/ShippingDetailsInputs.tsx", "../app/components/CustomerDetailsInputs.tsx", "../app/components/styledContainers/InputRow.tsx", "../app/icons/StoreFrontIcon.tsx", "../app/icons/ShippingTruckIcon.tsx", "../app/components/PickupChoiceInputs.tsx", "../app/routes/writeOrder.tsx", "../app/lib/stripePaymentIntent.ts", "../app/routes/success.tsx", "../app/routes/events.tsx", "../app/routes/about.tsx", "../app/routes/index.tsx", "../app/components/HomeHero.tsx", "../app/components/FeaturedItems.tsx", "../app/routes/test.tsx", "../app/routes/pay.tsx", "../app/lib/checkAvailability.ts", "../app/lib/calcVerifiedTotal.ts", "../app/lib/reduceCartByName.ts", "../app/lib/calcShipping.tsx", "../app/routes/pay/index.tsx", "../app/components/CollapsibleCartSummary.tsx", "../app/icons/PlaySvg.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from 'stream';\nimport { renderToPipeableStream } from 'react-dom/server';\nimport { RemixServer } from '@remix-run/react';\nimport type { EntryContext } from '@remix-run/node';\nimport { Response, Headers } from '@remix-run/node';\nimport isbot from 'isbot';\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get('user-agent'))\n    ? 'onAllReady'\n    : 'onShellReady';\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n          responseHeaders.set('Transfer-Encoding', 'chunked');\n          responseHeaders.set('Connection', 'keep-alive');\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err) {\n          reject(err);\n        },\n        onError(error) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  useCatch,\n  useLoaderData,\n} from '@remix-run/react';\nimport { SiteSettings } from 'sanityTypes';\nimport Header from './components/Header';\nimport styles from './styles/tailwind-build.css';\nimport sanity from './lib/sanity/sanity';\nimport { CartProvider } from './context/useCart';\n\nconst siteSettingsQuery = `*[_type == \"siteSettings\"][0] {\n  backgroundColor,\n  textColor\n} `;\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\nexport const meta: MetaFunction = () => {\n  const description = `Sample Ecommerce Site`;\n  return {\n    description,\n  };\n};\n\nexport const loader: LoaderFunction = async () => {\n  const data: SiteSettings = await sanity.fetch(siteSettingsQuery);\n  return data;\n};\n\nfunction Document({\n  children,\n  title = `Westy Remix`,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  const data = useLoaderData();\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\n        <Meta />\n        <title>{title}</title>\n        <Links />\n      </head>\n      <body\n        style={{\n          backgroundColor: `${data?.backgroundColor.hex}`,\n          overscrollBehavior: 'none',\n        }}\n      >\n        <CartProvider initialCart={[]}>{children}</CartProvider>\n        <Scripts />\n        {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Header />\n      <Outlet />\n    </Document>\n  );\n}\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <div className='error-container'>\n        <h1>\n          {caught.status} {caught.statusText}\n        </h1>\n      </div>\n    </Document>\n  );\n}\n\n//  with remix <Scripts/>, you can accept the error prop in all your ErrorBoundary components and console.error(error); and you'll get even server-side errors logged in the browser's console.\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title='Uh-oh!'>\n      <Header />\n      <div className='error-container'>\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "import { useState } from 'react';\nimport { Link } from \"@remix-run/react\";\nimport DesktopNav from './DesktopNav';\nimport MobileNav from './MobileNav';\nimport MenuSvg from '~/icons/MenuSvg';\nimport Cart from './Cart';\nimport CoffeeCupIcon from '~/icons/CoffeeCupIcon';\nimport CartCount from './CartCount';\nimport { useCartUtils } from '~/context/useCart';\n\nfunction Header() {\n  const [showMobileNav, toggleShowMobileNav] = useState(false);\n  const { toggleIsCartOpen } = useCartUtils();\n\n  return (\n    <header className='flex text-slate-900 bg-slate-50 items-center p-4'>\n      <p className='text-2xl'>\n        <Link to='/'>westy coffee</Link>\n      </p>\n      <MobileNav\n        showMobileNav={showMobileNav}\n        toggleShowMobileNav={toggleShowMobileNav}\n      />\n      <div className='ml-auto flex'>\n        <button\n          className='grid place-items-center'\n          type='button'\n          aria-label='show navigation menu'\n          onClick={() => {\n            toggleShowMobileNav(true);\n          }}\n        >\n          <MenuSvg />\n        </button>\n        <button\n          type='button'\n          title='Your Cart'\n          aria-label='open your shopping cart'\n          onClick={() => toggleIsCartOpen(true)}\n          className='ml-4 mr-2 grid grid-cols-1 grid-rows-1 place-items-center text-center'\n        >\n          <div className='row-span-full col-span-full'>\n            <CoffeeCupIcon w={'32'} h={'32'} />\n          </div>\n          <CartCount />\n        </button>{' '}\n      </div>\n      <DesktopNav />\n\n      <Cart />\n    </header>\n  );\n}\n\nexport default Header;\n", "import { Link } from \"@remix-run/react\";\n\nconst NavStyles = `\n  padding: 1rem 0;\n  margin-left: auto;\n  ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n  }\n  a {\n    &:hover {\n      color: dark green;\n    }\n  }\n`;\n\nexport default function Nav() {\n  return (\n    <nav className='hidden'>\n      <ul>\n        <li>\n          <Link to='/coffee'>coffee</Link>\n        </li>\n        <li>\n          <Link to='/events'>events</Link>\n        </li>\n        <li>\n          <Link to='/blog'>blog</Link>\n        </li>\n        <li>\n          <Link to='/about'>about</Link>\n        </li>\n        <li>\n          <Link to='/contact'>contact</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport InstagramSvg from '~/icons/InstagramSvg';\nimport XSvg from '~/icons/XSvg';\n\ntype ComponentProps = {\n  showMobileNav: boolean;\n  toggleShowMobileNav: (bool: boolean) => void;\n};\n\nconst links = ['coffee', 'events', 'blog', 'about', 'contact'];\n\nexport default function MobileNav({\n  showMobileNav,\n  toggleShowMobileNav,\n}: ComponentProps) {\n  return (\n    <div\n      className={`bg-slate-50 text-slate-900 p-4 w-3/4 max-w-md fixed top-0 right-0 h-screen z-20 transition-all hideOnDesktop\n        ${showMobileNav ? 'translate-x-0 ' : 'translate-x-full'}`}\n    >\n      <header className='flex items-center justify-end'>\n        <button\n          type='button'\n          className='btn-icon'\n          aria-label='close navigation'\n          onClick={() => toggleShowMobileNav(false)}\n        >\n          <XSvg w={'24'} h={'24'} />\n        </button>\n      </header>\n      <nav>\n        <ul className='flex flex-col text-xl ml-4'>\n          {links.map((link) => (\n            <li key={link} className='p-3'>\n              <Link onClick={() => toggleShowMobileNav(false)} to={`./${link}`}>\n                {link}\n              </Link>\n            </li>\n          ))}\n          <li className='p-3'>\n            <a\n              href='https://www.instagram.com/neighborlycoffee'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              <InstagramSvg w={'24'} h={'24'} />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n", "export default function InstagramSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <rect x='2' y='2' width='20' height='20' rx='5' ry='5'></rect>\n      <path d='M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z'></path>\n      <line x1='17.5' y1='6.5' x2='17.5' y2='6.5'></line>\n    </svg>\n  );\n}\n", "export default function XSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <line x1='18' y1='6' x2='6' y2='18' />\n      <line x1='6' y1='6' x2='18' y2='18' />\n    </svg>\n  );\n}\n", "export default function MenuSvg() {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      className='h-5 w-5'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path\n        fillRule='evenodd'\n        d='M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'\n        clipRule='evenodd'\n      />\n    </svg>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { useCartItems, useCartUtils } from '~/context/useCart';\nimport CartSummary from './CartSummary';\n\nexport default function Cart() {\n  const { isCartOpen, toggleIsCartOpen } = useCartUtils();\n  const cartItems = useCartItems();\n  return (\n    <div\n      className={`p-2 fixed bg-slate-100 h-screen w-11/12 max-w-[650px] min-w-[310px] top-0 right-0 z-40 transition-all duration-300 overflow-scroll shadow-2xl\n  ${isCartOpen ? 'translate-x-0' : 'translate-x-full'}`}\n    >\n      <header className='flex px-2'>\n        <h2 className='text-3xl'>Your Cart</h2>\n        <button\n          className='ml-auto text-3xl'\n          title='Close Cart'\n          aria-label='Close Your Shopping Cart'\n          onClick={() => toggleIsCartOpen(false)}\n        >\n          &times;\n        </button>\n      </header>\n      <CartSummary />\n      <div className='flex justify-evenly'>\n        <button\n          className='bg-slate-600 text-slate-50 px-6 py-3 rounded'\n          // role='link'\n          onClick={() => toggleIsCartOpen(false)}\n          // to='/'\n        >\n          keep shopping\n        </button>\n        <Link\n          className='bg-amber-800 text-amber-50 px-6 py-3 rounded'\n          role='link'\n          onClick={() => toggleIsCartOpen(false)}\n          to='/reviewCart'\n        >\n          checkout\n        </Link>\n      </div>\n    </div>\n  );\n}\n", "import { CartItem } from 'myTypes';\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useReducer,\n  useState,\n} from 'react';\n\ntype UseCartManagerResult = ReturnType<typeof useCartManager>;\n\nexport const CartContext = createContext<UseCartManagerResult>({\n  cartItems: [],\n  changeCartItemQuantity: () => {},\n  removeCartItem: () => {},\n  isCartOpen: false,\n  toggleIsCartOpen: () => {},\n});\n\ntype ActionType =\n  | { type: 'CHANGE_CART_QUANTITY'; cartItem: CartItem }\n  | { type: 'REMOVE_FROM_CART'; cartItem: CartItem };\n// | { type: 'UPDATE_PRICE'; payload: State };\n\nfunction useCartManager(initialCart: CartItem[]): {\n  cartItems: CartItem[];\n  changeCartItemQuantity: (cartItem: CartItem) => void;\n  removeCartItem: (cartItem: CartItem) => void;\n  isCartOpen: boolean;\n  toggleIsCartOpen: React.Dispatch<React.SetStateAction<boolean>>;\n} {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, dispatch] = useReducer(myCartReducerFunction, initialCart);\n  const changeCartItemQuantity = useCallback((cartItem: CartItem) => {\n    dispatch({ type: 'CHANGE_CART_QUANTITY', cartItem });\n  }, []);\n  const removeCartItem = useCallback((cartItem: CartItem) => {\n    dispatch({ type: 'REMOVE_FROM_CART', cartItem });\n  }, []);\n  return {\n    cartItems,\n    changeCartItemQuantity,\n    removeCartItem,\n    isCartOpen,\n    toggleIsCartOpen: setIsCartOpen,\n  };\n}\n\nconst myCartReducerFunction = (\n  cartItemsState: CartItem[],\n  action: ActionType\n) => {\n  const cartItemIndex = cartItemsState.findIndex(\n    (cartItem) =>\n      cartItem.name === action.cartItem.name &&\n      cartItem.grind === action.cartItem.grind\n  );\n  switch (action.type) {\n    case 'CHANGE_CART_QUANTITY':\n      if (cartItemIndex === -1) {\n        return [...cartItemsState, action.cartItem];\n      }\n      if (cartItemIndex > -1) {\n        const updatedCart = [...cartItemsState];\n        //quantity will be positive to increase, or -1 to decrease number in cart\n        cartItemsState[cartItemIndex].quantity += action.cartItem.quantity;\n        return updatedCart;\n      }\n    case 'REMOVE_FROM_CART':\n      const cartCopy = [...cartItemsState];\n      cartCopy.splice(cartItemIndex, 1);\n      return cartCopy;\n    // case 'UPDATE_PRICE':\n    //   console.log('UPDATE_PRICE', payload);\n\n    //   return {\n    //     ...state,\n    //     total: payload.total,\n    //   };\n    default:\n      throw new Error(`No case for action type found in cartReducer.`);\n  }\n};\n\nexport const CartProvider = ({\n  initialCart,\n  children,\n}: {\n  initialCart: CartItem[];\n  children: React.ReactNode;\n}) => {\n  return (\n    <CartContext.Provider value={useCartManager(initialCart)}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCartUtils = () => {\n  const { isCartOpen, toggleIsCartOpen } = useContext(CartContext);\n  return { isCartOpen, toggleIsCartOpen };\n};\n\nexport const useCartItems = (): CartItem[] => {\n  const { cartItems } = useContext(CartContext);\n  return cartItems;\n};\n\nexport const useChangeCartItemQuantity =\n  (): UseCartManagerResult['changeCartItemQuantity'] => {\n    const { changeCartItemQuantity } = useContext(CartContext);\n    return changeCartItemQuantity;\n  };\nexport const useRemoveFromCart = (): UseCartManagerResult['removeCartItem'] => {\n  const { removeCartItem } = useContext(CartContext);\n  return removeCartItem;\n};\n", "import { CartItem } from 'myTypes';\n\nexport default function calcTotalPrice(cartItems: CartItem[]) {\n  return cartItems.reduce((tally, cartItem) => {\n    return tally + cartItem.quantity * cartItem.price;\n  }, 0);\n}\n", "export default function formatMoney(amount = 0) {\n  const options = {\n    style: 'decimal',\n    // currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n\n  // check if its a clean dollar amount\n  // if (amount % 100 === 0) {\n  //   options.minimumFractionDigits = 0;\n  // }\n\n  const formatter = Intl.NumberFormat('en-US', options);\n\n  return formatter.format(amount / 100);\n}\n", "import { CartItem } from 'myTypes';\nimport { useState } from 'react';\nimport {\n  useCartItems,\n  useChangeCartItemQuantity,\n  useRemoveFromCart,\n} from '~/context/useCart';\nimport formatMoney from '~/lib/formatMoney';\nimport getTotalQuantityInCart from '~/lib/getTotalQuantityInCart';\n\nexport default function AdjustQuantityButtons({\n  cartItem,\n}: {\n  cartItem: CartItem;\n}) {\n  const [alert, setAlert] = useState<string | null>();\n  const changeCartItemQuantity = useChangeCartItemQuantity();\n  const removeFromCart = useRemoveFromCart();\n  const cartItems = useCartItems();\n\n  const totalCartQuantity = getTotalQuantityInCart(\n    cartItem.coffeeId,\n    cartItems\n  );\n\n  return (\n    <>\n      <div className='flex justify-between items-center'>\n        <div className='rounded-full flex justify-evenly bg-green-600 h-9 w-[100px] items-center'>\n          <p>\n            <button\n              className='-mt-1 text-green-50'\n              disabled={cartItem.quantity < 1}\n              onClick={() => {\n                if (cartItem.quantity == 1) {\n                  if (confirm(`remove ${cartItem.name} from cart?`)) {\n                    removeFromCart(cartItem);\n                  }\n                  return;\n                }\n\n                changeCartItemQuantity({\n                  name: cartItem.name,\n                  coffeeId: cartItem.coffeeId,\n                  quantity: -1,\n                  grind: cartItem.grind,\n                  variant_id: cartItem.variant_id,\n                  price: cartItem.price,\n                  inStock: cartItem.inStock,\n                });\n              }}\n            >\n              <span className='text-2xl'>-</span>\n            </button>\n          </p>\n          <p className='mx-4 text-xl text-green-50'>{cartItem.quantity}</p>\n          <p>\n            <button\n              className='-mt-1 text-green-50'\n              onClick={() => {\n                if (\n                  totalCartQuantity === cartItem.inStock ||\n                  cartItem.inStock < totalCartQuantity\n                ) {\n                  setAlert(`There are only ${cartItem.inStock} available`);\n                  setTimeout(() => {\n                    setAlert(null);\n                  }, 2000);\n                } else {\n                  changeCartItemQuantity({\n                    name: cartItem.name,\n                    coffeeId: cartItem.coffeeId,\n                    quantity: 1,\n                    grind: cartItem.grind,\n                    variant_id: cartItem.variant_id,\n                    price: cartItem.price,\n                    inStock: cartItem.inStock,\n                  });\n                }\n              }}\n            >\n              <span className='text-2xl'>+</span>\n            </button>\n          </p>\n        </div>\n        {alert && <p>{alert}</p>}\n        <p className='text-xl'>\n          {`$${formatMoney(cartItem.price * cartItem.quantity)} `}\n        </p>\n      </div>\n    </>\n  );\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function getTotalQuantityInCart(\n  coffeeId: string,\n  cartItems: CartItem[]\n) {\n  const totalQ = cartItems.reduce((tally, cartItem) => {\n    if (coffeeId === cartItem.coffeeId) {\n      return tally + cartItem.quantity;\n    } else return tally;\n  }, 0);\n  return totalQ;\n}\n", "import { CartItem } from 'myTypes';\nimport TrashIcon from '~/icons/TrashIcon';\nimport formatMoney from '~/lib/formatMoney';\nimport AdjustQuantityButtons from './AdjustQuantityButtons';\n\nexport default function CartListItem({ cartItem }: { cartItem: CartItem }) {\n  return (\n    <li className='p-4 border-b-2'>\n      <div className='mx-auto md:w-2/3'>\n        <div className='flex justify-between items-center'>\n          <h3 className='text-xl'>{cartItem.name}</h3>\n          {/* <div>\n            <button onClick={() => removeFromCart(cartItem)}>\n              <TrashIcon />\n            </button>\n          </div> */}\n        </div>\n        <div className='flex'>\n          <div>\n            <p className='text-sm mr-8 mb-2 text-slate-600'>{`${\n              cartItem.grind === 'whole' ? 'whole bean' : 'ground'\n            }`}</p>\n          </div>\n          <div className='pb-1 text-slate-600'>\n            <p className='text-sm'>{`$${formatMoney(cartItem.price)}`} </p>\n          </div>\n        </div>\n        <AdjustQuantityButtons cartItem={cartItem} />\n      </div>\n    </li>\n  );\n}\n", "import { useCartItems } from '~/context/useCart';\nimport calcTotalPrice from '~/lib/calcCartTotal';\nimport formatMoney from '~/lib/formatMoney';\nimport CartListItem from './CartListItem';\n\nexport default function CartSummary() {\n  const cartItems = useCartItems();\n  const subtotal = calcTotalPrice(cartItems);\n  const shipping = subtotal < 4999 ? 1000 : 0;\n  return (\n    <div>\n      <div>\n        <ul>\n          {cartItems.map((cartItem) => (\n            <CartListItem key={cartItem.coffeeId} cartItem={cartItem} />\n          ))}\n        </ul>\n      </div>\n      <div className='flex flex-col p-4 text-right '>\n        <p className='text-xl text-slate-600'>\n          Subtotal: <span className='ml-2'>{`$${formatMoney(subtotal)}`}</span>\n        </p>\n        <p className='text-xl text-slate-600'>\n          Shipping: <span className='ml-2'>{`$${formatMoney(shipping)}`}</span>\n        </p>\n        <p className='text-2xl py-1'>\n          Total:{' '}\n          <span className='ml-2'>{`$${formatMoney(subtotal + shipping)}`}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n", "export default function CoffeeCupIcon({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 28 28'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <path d='M22 10h1a4 4 0 0 1 0 8h-1'></path>\n      <path d='M2 8h20v15a4 10 0 0 1-4 4H6a4 10 0 0 1-4-4V8z'></path>\n      <line x1='8' y1='1' x2='8' y2='4'></line>\n      <line x1='12' y1='1' x2='12' y2='4'></line>\n      <line x1='16' y1='1' x2='16' y2='4'></line>\n    </svg>\n  );\n}\n", "import { CartItem } from 'myTypes';\nimport { useCartItems } from '~/context/useCart';\n\nexport default function CartCount() {\n  const cartItems = useCartItems();\n\n  function calcTotalQuantity(cartItems: CartItem[]) {\n    return cartItems.reduce((tally, cartItem) => {\n      return tally + cartItem.quantity;\n    }, 0);\n  }\n  if (calcTotalQuantity(cartItems) === 0) {\n    return null;\n  }\n  return (\n    <div className='bg-red-500 text-red-50 p-[1px] leading-5 min-w-[18px] h-[18px] mr-[5px] mt-2 text-sm row-span-full col-span-full rounded-full'>\n      <p className='-mt-[2px]'>{calcTotalQuantity(cartItems)}</p>\n    </div>\n  );\n}\n", "import sanityClient from '@sanity/client';\n\nexport default sanityClient({\n  // Find your project ID and dataset in `sanity.json` in your studio project\n  projectId: process.env.SANITY_PROJECT_ID,\n  dataset: 'production',\n  useCdn: true,\n  apiVersion: '2022-03-06',\n  token: process.env.SANITY_API_TOKEN ?? ``,\n\n  // useCdn == true gives fast, cheap responses using a globally distributed cache.\n  // Set this to false if your application require the freshest possible\n  // data always (potentially slightly slower and a bit more expensive).\n});\n// will need auth client to fetch draft docs and mutations\n", "import type { LoaderFunction } from '@remix-run/node';\nimport { useCatch, useLoaderData, useParams } from '@remix-run/react';\nimport { filterDataToSingleItem } from '~/lib/sanity/filterDataToSingleItem';\nimport type { Coffee } from '../../../sanityTypes';\nimport { useState } from 'react';\nimport Preview from '~/components/Preview';\nimport { getClient } from '~/lib/sanity/getClient';\nimport { PortableText, urlFor } from '~/lib/sanity/helpers';\nimport AddToCartForm from '~/components/AddToCartForm';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport dayjs from 'dayjs';\n\ntype LoaderData = {\n  initialData: Coffee[];\n  preview: boolean;\n  singleCoffeeQuery?: string | null;\n  queryParams?: { slug: string | undefined } | null;\n};\n\n//Route params are passed to your loader.\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const requestUrl = new URL(request?.url);\n  const preview =\n    requestUrl?.searchParams?.get('preview') ===\n    process.env.SANITY_PREVIEW_SECRET;\n\n  // Query for _all_ documents with this slug\n  // There could be two: Draft and Published!\n\n  //in this query, '$' character before 'slug' denotes that slug will is a string template, provided in second argument of the fetch function call\n  const singleCoffeeQuery = `*[_type == \"coffee\" && slug.current == $slug]`;\n  const queryParams = { slug: params.coffeeSlug };\n  const initialData = await getClient(preview).fetch(\n    singleCoffeeQuery,\n    queryParams\n  );\n  if (!initialData) {\n    throw new Response('Oh no - that Coffee was not found!', {\n      status: 404,\n      statusText: 'That coffee was not found',\n    });\n  }\n\n  const data: LoaderData = {\n    initialData,\n    preview,\n    singleCoffeeQuery: preview ? singleCoffeeQuery : null,\n    queryParams: preview ? queryParams : null,\n  };\n\n  return data;\n};\n\nexport default function CoffeeRoute() {\n  let { initialData, preview, singleCoffeeQuery, queryParams } =\n    useLoaderData<LoaderData>();\n\n  // If `preview` mode is active, its component update this state for us\n  const [data, setData] = useState(initialData);\n\n  //  A helper function checks the returned documents\n  // To show Draft if in preview mode, otherwise Published\n  const coffee = filterDataToSingleItem(data, preview);\n\n  return (\n    <main className='h-screen'>\n      {preview && (\n        <Preview\n          data={data}\n          setData={setData}\n          query={singleCoffeeQuery}\n          queryParams={queryParams}\n        />\n      )}\n      {/* When working with draft content, optional chain _everything_ */}\n      <ContentContainer>\n        {coffee?.name && (\n          <h2 className='p-4 text-3xl text-center'>{coffee.name}</h2>\n        )}\n        {coffee?.roastLevel && (\n          <p className='text-center'>{coffee.roastLevel} roast</p>\n        )}\n        {coffee?.image && (\n          <img\n            loading='lazy'\n            src={urlFor(coffee.image).width(400).height(200)}\n            width='400'\n            height='200'\n            alt={coffee?.name ?? ``}\n            className='m-auto py-7'\n          />\n        )}\n        <div className='divide-y divide-solid'>\n          {coffee?.descriptionLong && (\n            <div className='label__longDescription p-4 text-justify max-w-xl mx-auto'>\n              <PortableText value={coffee.descriptionLong} />\n            </div>\n          )}\n          <div className='label__detailListAndForm grid place-items-center place-content-center grid-cols-autoFit2 w-full max-w-[700px] mx-auto'>\n            {/* grid-repeat(auto-fit, minmax(250px, 50%) */}\n            <dl className='label__coffeeDetailsList p-3 self-start'>\n              {coffee?.roastDate && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    <dt className='w-20 text-slate-900 justify-self-start text-lg mr-3'>\n                      roasted\n                    </dt>\n                    <dd className='text-amber-800'>\n                      {dayjs(coffee.roastDate).format('MMMM DD')}\n                    </dd>\n                  </>\n                </div>\n              )}\n              {coffee?.grade && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    <dt className='w-20 w- text-slate-900 justify-self-start text-lg mr-3'>\n                      grade\n                    </dt>\n                    <dd className='text-amber-800'>{coffee.grade}</dd>\n                  </>\n                </div>\n              )}\n              {coffee?.region && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    <dt className='w-20 text-slate-900 justify-self-start text-lg mr-3'>\n                      region\n                    </dt>\n                    <dd className='text-amber-800'>{coffee.region}</dd>\n                  </>\n                </div>\n              )}\n              {coffee?.cultivar && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    post{' '}\n                    <dt className='w-20 text-slate-900 justify-self-start text-lg mr-3'>\n                      cultivar\n                    </dt>\n                    <dd className='text-amber-800'>{coffee.cultivar}</dd>\n                  </>\n                </div>\n              )}\n              {coffee?.elevation && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    post{' '}\n                    <dt className='w-20 text-slate-900 justify-self-start text-lg mr-3'>\n                      elevation\n                    </dt>\n                    <dd className='text-amber-800'>{coffee.elevation}</dd>\n                  </>\n                </div>\n              )}\n              {coffee?.process && (\n                <div className='flex flex-row items-baseline'>\n                  <>\n                    post{' '}\n                    <dt className='w-20 text-slate-900 justify-self-start text-lg mr-3'>\n                      process\n                    </dt>\n                    <dd className='text-amber-800'>{coffee.process}</dd>\n                  </>\n                </div>\n              )}\n            </dl>\n\n            {coffee?.stock && coffee?.stock > 0 ? (\n              <AddToCartForm coffee={coffee} />\n            ) : (\n              <p>out of stock</p>\n            )}\n          </div>\n        </div>\n      </ContentContainer>\n    </main>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div className='error-container'>\n          Huh? What the heck is {params.coffeeSlug}?\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  const { coffeeSlug } = useParams();\n  return (\n    <div className='error-container'>{`There was an error loading coffee ${coffeeSlug}. Sorry.`}</div>\n  );\n}\n\n// export const meta: MetaFunction = ({\n//   data,\n// }: {\n//   data: LoaderData | undefined;\n// }) => {\n//   if (!data) {\n//     return {\n//       title: 'No coffee',\n//       description: 'No coffee found',\n//     };\n//   }\n//   return {\n//     title: `${data.coffee.name}`,\n//     description: `Enjoy a hot cup of  \"${data.coffee.name}\" coffee`,\n//   };\n// };\n", "export function filterDataToSingleItem(data = [], preview = false) {\n  if (!Array.isArray(data)) {\n    return data;\n  }\n\n  if (data.length === 1) {\n    return data[0];\n  }\n\n  if (preview) {\n    return data.find((item) => item._id.startsWith(`drafts.`)) || data[0];\n  }\n\n  return data[0];\n}\n", "import { useEffect } from 'react';\n\nimport { usePreviewSubscription } from '~/lib/sanity/usePreviewSubscription';\n\nexport default function Preview({\n  data,\n  setData,\n  query,\n  queryParams,\n}: {\n  data: any;\n  setData: any;\n  query: any;\n  queryParams: any;\n}) {\n  const { data: previewData } = usePreviewSubscription(query, {\n    params: queryParams,\n    initialData: data,\n    enabled: true,\n  });\n\n  useEffect(() => setData(previewData), [previewData]);\n\n  return (\n    <div className='pointer-events-none fixed inset-0 z-50 flex items-start justify-center p-2'>\n      <div className='flex items-center gap-x-2 rounded bg-pink-500 p-1 font-bold text-white shadow-lg'>\n        <span className='inline-block p-2'>Preview Mode</span>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport { groqStore, GroqStore } from '@sanity/groq-store';\n\nimport { config } from './config';\n\ninterface SubscriptionOptions<R = any> {\n  enabled?: boolean;\n  params?: Record<string, unknown>;\n  initialData?: R;\n}\n\nexport function usePreviewSubscription(\n  query: string,\n  subscriptionOptions: SubscriptionOptions\n) {\n  const { enabled, params, initialData } = subscriptionOptions;\n  const [data, setData] = useState(initialData);\n\n  useEffect(() => {\n    let sub: any;\n    let store: GroqStore | undefined;\n\n    async function createStore() {\n      // For more details about configuring groq-store see:\n      // https://www.npmjs.com/package/@sanity/groq-store\n\n      const { projectId, dataset } = config;\n\n      store = groqStore({\n        projectId,\n        dataset,\n        // Keep dataset up to date with remote changes. Default: false\n        listen: true,\n\n        // \"Replaces\" published documents with drafts, if available.\n        // Note that document IDs will not reflect draft status, currently\n        overlayDrafts: true,\n\n        // Optional token, if you want to receive drafts, or read data from private datasets\n        // NOTE: Does _not_ work in browsers (yet)\n        //token: token\n        documentLimit: 1000,\n      });\n\n      store.subscribe(query, params ?? {}, (err: any, result: any) => {\n        if (err) {\n          console.error('Oh no, an error:', err);\n          return;\n        }\n        setData(result);\n      });\n    }\n\n    if (enabled) {\n      createStore();\n    }\n\n    return () => {\n      if (sub?.unsubscribe()) sub.unsubscribe();\n      if (store) store.close();\n    };\n  }, []);\n\n  return { data };\n}\n", "interface ClientConfig {\n  apiVersion: string;\n  dataset: string;\n  projectId: string;\n  useCdn: boolean;\n}\n\n// // _probably_ a way to actually pull these from the getEnv.ts file\n// type EnvKey = 'NODE_ENV' | 'SANITY_DATASET' | 'SANITY_PROJECT_ID'\n\n// function getEnvByKey(key: EnvKey) {\n//   return typeof window === 'undefined' ? process.env[key] : window?.ENV[key]\n// }\n\nexport const config: ClientConfig = {\n  apiVersion: '2021-03-25',\n  dataset: 'production',\n  projectId: 't9guxb1x',\n  useCdn: false,\n};\n", "// The 'next-sanity' implementation uses the full @sanity/client\n// Since we don't need to do mutation, we can just use PicoSanity instead\n// (Also, @sanity/client was giving me drama)\nimport PicoSanity from 'picosanity';\n\nimport { config } from './config';\n\n// Set up the client for fetching data in the getProps page functions\nexport const sanityClient = new PicoSanity(config);\n\n// Set up a preview client with serverless authentication for drafts\nexport const previewClient = new PicoSanity({\n  ...config,\n  useCdn: false,\n  token:\n    typeof window === 'undefined' && process\n      ? process.env.SANITY_API_TOKEN\n      : ``,\n});\n\n// Helper function for easily switching between normal client and preview client\nexport const getClient = (usePreview = false) =>\n  usePreview ? previewClient : sanityClient;\n\n// Quick client for querying community posts\nexport const communityClient = new PicoSanity({\n  ...config,\n  projectId: `t9guxb1x`,\n});\n", "import imageUrlBuilder from '@sanity/image-url';\nimport { PortableText as PortableTextComponent } from '@portabletext/react';\n\nimport { config } from './config';\n\nexport const urlFor = (source) => imageUrlBuilder(config).image(source);\n\nexport function PortableText(props) {\n  return <PortableTextComponent {...props} />;\n}\n", "import { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport {\n  useChangeCartItemQuantity,\n  useCartItems,\n  useCartUtils,\n} from '~/context/useCart';\nimport MinusSvg from '~/icons/MinusSvg';\nimport PlusSvg from '~/icons/PlusSvg';\nimport type { Coffee } from '../../sanityTypes';\nimport getTotalQuantityInCart from '~/lib/getTotalQuantityInCart';\n\nexport default function AddToCartForm({ coffee }: { coffee: Coffee }) {\n  const [alert, setAlert] = useState<string | null>();\n  const [grind, setGrind] = useState('whole');\n  const [desiredQuantity, setDesiredQuantity] = useState<number>(1);\n  const cartItems = useCartItems();\n  const changeCartItemQuantity = useChangeCartItemQuantity();\n  const { toggleIsCartOpen } = useCartUtils();\n  const totalCartQuantity = getTotalQuantityInCart(coffee._id, cartItems);\n\n  const handleGrindChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setGrind(e.target.value);\n  };\n\n  return (\n    <>\n      <div className=' label__Formcontainer p-3 flex flex-col justify-evenly items-center'>\n        <div className='grindRadio flex flex-col'>\n          <label htmlFor='whole' className='py-2'>\n            <input\n              type='radio'\n              id='whole'\n              name='grind'\n              value={'whole'}\n              checked={grind === 'whole'}\n              onChange={handleGrindChange}\n              className='mr-1'\n            />\n            Whole Bean\n          </label>\n          <label htmlFor='ground' className='py-2'>\n            <input\n              type='radio'\n              id='ground'\n              name='grind'\n              value={'ground'}\n              checked={grind === 'ground'}\n              onChange={handleGrindChange}\n              className='mr-1'\n            />\n            Ground\n          </label>\n        </div>\n\n        <div className='flex place-content-center my-2'>\n          <div className='flex flex-col'>\n            <div className='flex'>\n              <button\n                type='button'\n                disabled={desiredQuantity === 1}\n                onClick={() => setDesiredQuantity(desiredQuantity - 1)}\n              >\n                <MinusSvg />\n              </button>\n              <p className='mx-5 text-xl'>{desiredQuantity}</p>\n              <button\n                type='button'\n                onClick={() => {\n                  if (\n                    totalCartQuantity === coffee.stock ||\n                    totalCartQuantity + desiredQuantity === coffee.stock\n                  ) {\n                    setAlert(\n                      `you have ${totalCartQuantity} ${coffee.name} in your cart.  There are only ${coffee.stock} available`\n                    );\n                    setTimeout(() => {\n                      setAlert(null);\n                    }, 2000);\n                  } else {\n                    setDesiredQuantity(desiredQuantity + 1);\n                  }\n                }}\n              >\n                <PlusSvg w={'18'} h={'18'} />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button\n            disabled={\n              totalCartQuantity === coffee.stock ||\n              totalCartQuantity + desiredQuantity > coffee.stock\n            }\n            className='text-lg bg-slate-600 text-slate-50 rounded-full px-5 py-2 mt-2 disabled:bg-slate-300 disabled:text-slate:100'\n            onClick={(e) => {\n              e.preventDefault();\n              setDesiredQuantity(1);\n              changeCartItemQuantity({\n                name: `${coffee.name}`,\n                coffeeId: `${coffee._id}`,\n                quantity: desiredQuantity,\n                grind,\n                variant_id: `${coffee._id + grind}`,\n                price: coffee.price,\n                inStock: coffee.stock,\n              });\n              toggleIsCartOpen(true);\n            }}\n          >\n            Add {desiredQuantity} to Cart\n          </button>\n        </div>\n        {alert && <p>{alert}</p>}\n      </div>\n    </>\n  );\n}\n", "export default function MinusSvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n    >\n      <line x1='5' y1='12' x2='19' y2='12'></line>\n    </svg>\n  );\n}\n", "export default function PlusSvg({ w = '20', h = '20' }) {\n  return (\n    <svg width={w} height={h} viewBox='0 0 23 23'>\n      <path\n        fill='transparent'\n        strokeWidth='2'\n        stroke='currentColor'\n        strokeLinecap='round'\n        opacity='1'\n        d='M 11 .5 L 11 18.346'\n      ></path>\n      <path\n        fill='transparent'\n        strokeWidth='2'\n        stroke='currentColor'\n        strokeLinecap='round'\n        opacity='1'\n        d='M 2 9.423 L 20 9.423'\n      ></path>\n    </svg>\n  );\n}\n", "import React from 'react';\n\nexport default function ContentContainer({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <div className='bg-slate-50 p-4 rounded max-w-[800px] min-w-[316px] w-11/12 my-6 mx-auto'>\n      {children}\n    </div>\n  );\n}\n", "import { ActionArgs } from '@remix-run/node';\nimport { OrderDetails } from 'myTypes';\nimport Stripe from 'stripe';\nimport { writeOrderToSanity } from '~/lib/sanity/writeOrder';\n\nconst stripe = new Stripe(process.env.STRIPE_TEST_SECRET_KEY, {\n  apiVersion: '2022-08-01',\n});\n\nexport const action = async ({ request }: ActionArgs) => {\n  const secret = process.env.STRIPE_WEBHOOKS_SECRET;\n  const signature = request.headers.get('stripe-signature');\n  let event;\n  const payload = await request.text();\n  try {\n    event = stripe.webhooks.constructEvent(payload, signature, secret);\n  } catch (err: any) {\n    return new Response(err.message, { status: 400 });\n  }\n  console.log('event', event);\n  if (event.type === 'charge.succeeded') {\n    console.log('payment succeeded');\n    console.log(event.data.object.metadata);\n\n    const orderDetails: OrderDetails = JSON.parse(\n      event.data.object.metadata.orderDetails\n    );\n    const cartItems = orderDetails.cart;\n    const orderId = orderDetails.id;\n    const total = orderDetails.total;\n\n    try {\n      writeOrderToSanity({\n        cart: cartItems,\n        customerDetails: orderDetails.customerDetails,\n        fulfillmentDetails: orderDetails.fulfillmentDetails,\n        total,\n        id: orderId,\n      });\n    } catch (err) {\n      console.log('error writing to sanity:', err);\n    }\n  }\n  return {};\n};\n", "import { randomFillSync } from 'crypto'\nimport { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet }\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nexport let random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n", "import { OrderDetails } from 'myTypes';\nimport SanityClient from '~/lib/sanity/sanity';\nimport { customAlphabet } from 'nanoid';\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nasync function writeOrderToSanity(orderDetails: OrderDetails) {\n  const orderDate = new Date().toISOString();\n  const orderNumber = nanoid();\n  // ?? is it ok to assign an object to a var like this , or make a copy {...}\n  const cartItems = orderDetails.cart;\n  const { customerName, customerEmail, customerPhone } =\n    orderDetails.customerDetails;\n  const {\n    method,\n    pickupLocation,\n    shippingName,\n    shippingAddressLine1,\n    shippingAddressLine2,\n    shippingCity,\n    shippingPostal_code,\n    shippingState,\n  } = orderDetails.fulfillmentDetails;\n\n  const configuredOrderItems = cartItems.map((cartItem) => {\n    return {\n      name: cartItem.name,\n      grind: cartItem.grind,\n      quantity: cartItem.quantity,\n      _key: nanoid(),\n    };\n  });\n\n  const doc = {\n    _type: 'order',\n    customerName,\n    customerEmail,\n    customerPhone,\n    number: orderNumber,\n    total: orderDetails.total,\n    orderItems: configuredOrderItems,\n    orderDate,\n    deliveryMethod: method,\n    pickupLocation: method === 'shipping' ? 'NA' : pickupLocation,\n    shippingName,\n    shippingAddressLine1,\n    shippingAddressLine2,\n    shippingCity,\n    shippingState,\n    shippingZip: shippingPostal_code,\n    // customerComments,\n    shipped: false,\n    stripe_id: orderDetails.id,\n  };\n  // if (env !== 'production') {\n  //   await SanityDevelopment.create(doc)\n  //     .then((res) => {\n  //       console.log('order written to sanity dev db', res);\n  //     })\n  //     .catch((err) => {\n  //       console.error('error writing order to Sanity:', err);\n  //       // notify neighborly of error writing to sanity orders\n  //     });\n  //   return;\n  // }\n  await SanityClient.create(doc)\n    .then((res) => {})\n    .catch((err) => {\n      throw `Error writing to sanity: ${err}`;\n      // notify neighborly of error writing to sanity orders\n    });\n}\n\nexport { writeOrderToSanity };\n", "import { LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport sanity from '~/lib/sanity/sanity';\nimport AllCoffee from '~/components/AllCoffee';\nimport { Coffee } from 'sanityTypes';\n\nconst query = `\n*[_type == \"coffee\" && !(_id in path('drafts.**'))] {\n  _id,\n  name,\n  stock,\n  roastLevel,\n  roastDate,\n  description,\nslug{current},\nprice\n}\n`;\n\ninterface LoaderData {\n  coffee: Coffee[];\n  referringPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const requestUrl = new URL(request?.url);\n  const referringPath = requestUrl.pathname;\n  const coffee = await sanity.fetch(query).catch((err) => console.log(err));\n  const data: LoaderData = { coffee, referringPath };\n  return data;\n};\n\nfunction coffeeIndex() {\n  const data = useLoaderData();\n\n  return (\n    <div>\n      <AllCoffee\n        allCoffee={data.coffee}\n        referringPath={data.referringPath + '/'}\n      />\n    </div>\n  );\n}\n\nexport default coffeeIndex;\n", "import dayjs from 'dayjs';\nimport { Link } from \"@remix-run/react\";\nimport type { Coffee } from '../../sanityTypes';\n\n// this card is a link that routes to the specific page for that coffee.  The link is used on the home page ('/') AND on the all coffees page ('/coffee), each of which have a different base url, so the correct url href passed to Link is constructed at the same component as the loader, where the requesting url is obtained, and in the case of the home page, a relative '/coffee' is prepended to the slug, whereas at the /coffee index, just a '/' is prepended\n\nfunction CoffeeCard({\n  coffee,\n  referringPath,\n}: {\n  coffee: Coffee;\n  referringPath: string;\n}) {\n  const link = referringPath + coffee?.slug?.current;\n  return (\n    <Link to={link}>\n      <div className='p-4 border-8 border-green-200 bg-green-500 rounded shadow text-green-50 w-[300px] h-[300px] mb-1 flex flex-col justify-between'>\n        <div className='h-1/6 grid place-items-center'>\n          <h2 className='text-2xl font-normal'>{coffee.name}</h2>\n        </div>\n        <div className='flex flex-col flex-grow justify-center items-center space-y-4'>\n          {coffee.roastLevel && <p>{coffee.roastLevel} roast</p>}\n          {coffee.description && <p>{coffee.description}</p>}\n          {coffee.roastDate && (\n            <p>roasted {dayjs(coffee.roastDate).format('MMMM DD')}</p>\n          )}\n        </div>\n        <div className='h-1/6 grid place-items-center'>\n          <p>{coffee.stock} in stock</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default CoffeeCard;\n", "import type { Coffee } from '../../sanityTypes';\nimport CoffeeCard from './CoffeeCard';\n\nfunction FeaturedItems({\n  allCoffee,\n  referringPath,\n}: {\n  allCoffee: Coffee[];\n  referringPath: string;\n}) {\n  return (\n    <main className='px-4 py-2 w-full flex flex-col items-center'>\n      <div className='py-3'>\n        <h2 className='text-2xl font-medium'>Our Coffees</h2>\n      </div>\n      <div className='py-2 flex flex-wrap justify-center gap-4'>\n        {allCoffee.map((coffee) => (\n          <CoffeeCard\n            key={coffee.name}\n            coffee={coffee}\n            referringPath={referringPath}\n          />\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default FeaturedItems;\n", "import type { LoaderFunction } from '@remix-run/node';\nimport { useCatch, useLoaderData, useParams } from '@remix-run/react';\nimport { filterDataToSingleItem } from '~/lib/sanity/filterDataToSingleItem';\nimport type { Post } from '../../../sanityTypes';\nimport { useState } from 'react';\nimport Preview from '~/components/Preview';\nimport { getClient } from '~/lib/sanity/getClient';\nimport { PortableText, urlFor } from '~/lib/sanity/helpers';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport { ImageUrlBuilder } from '@sanity/image-url/lib/types/builder';\n// interface ImageProps extends Omit<React.HTMLProps<HTMLImageElement>, 'src'> {\n//   src: string | ImageUrlBuilder;\n// }\ntype LoaderData = {\n  initialData: Post[];\n  preview: boolean;\n  singlePostQuery?: string | null;\n  queryParams?: { slug: string | undefined } | null;\n};\n\n//Route params are passed to your loader.\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const requestUrl = new URL(request?.url);\n  const preview: boolean =\n    requestUrl?.searchParams?.get('preview') ===\n    process.env.SANITY_PREVIEW_SECRET;\n\n  // Query for _all_ documents with this slug\n  // There could be two: Draft and Published!\n\n  //in this query, '$' character before 'slug' denotes that slug is a string template, provided in second argument of the fetch function call\n  const singlePostQuery = `*[_type == \"post\" && slug.current == $slug]`;\n  const queryParams = { slug: params.slug };\n  const initialData = await getClient(preview).fetch(\n    singlePostQuery,\n    queryParams\n  );\n  if (!initialData) {\n    throw new Response('Oh no - that Post was not found!', {\n      status: 404,\n      statusText: 'That post was not found',\n    });\n  }\n\n  const data: LoaderData = {\n    initialData,\n    preview,\n    // If `preview` mode is active, we'll need these for live updates:\n    singlePostQuery: preview ? singlePostQuery : null,\n    queryParams: preview ? queryParams : null,\n  };\n\n  return data;\n};\n\nexport default function CoffeeRoute() {\n  let { initialData, preview, singlePostQuery, queryParams } =\n    useLoaderData<LoaderData>();\n\n  // If `preview` mode is active, its component update this state for us\n  const [data, setData] = useState(initialData);\n\n  //  A helper function checks the returned documents\n  // To show Draft if in preview mode, otherwise Published\n  const post: Post = filterDataToSingleItem(data, preview);\n  console.log('post', post);\n  return (\n    <main>\n      {preview && (\n        <Preview\n          data={data}\n          setData={setData}\n          query={singlePostQuery}\n          queryParams={queryParams}\n        />\n      )}\n      {/* When working with draft content, optional chain _everything_ */}\n      <ContentContainer>\n        Post Container\n        {post?.mainImage && (\n          <img\n            loading='lazy'\n            src={urlFor(post.mainImage)}\n            width='400'\n            height='200'\n            alt={post?.title ?? ``}\n            className='m-auto py-7'\n          />\n        )}\n        {post?.title && (\n          <h2 className='p-4 text-3xl text-center'>{post.title}</h2>\n        )}\n        <PortableText value={post.body} />\n      </ContentContainer>\n    </main>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div className='error-container'>\n          Huh? What the heck is {params.postSlug}?\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  const { postSlug } = useParams();\n  return (\n    <div className='error-container'>{`There was an error loading post ${postSlug}. Sorry.`}</div>\n  );\n}\n\n// export const meta: MetaFunction = ({\n//   data,\n// }: {\n//   data: LoaderData | undefined;\n// }) => {\n//   if (!data) {\n//     return {\n//       title: 'No post',\n//       description: 'No post found',\n//     };\n//   }\n//   return {\n//     title: `${data.post.name}`,\n//     description: `Enjoy a hot cup of  \"${data.post.name}\" post`,\n//   };\n// };\n", "import { LoaderArgs, LoaderFunction } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { urlFor } from '~/lib/sanity/helpers';\nimport sanity from '~/lib/sanity/sanity';\nimport { PortableText } from '@portabletext/react';\nimport dayjs from 'dayjs';\n\nconst query = `*[_type == \"post\" && !(_id in path('drafts.**'))] | order(publishedAt desc) {\n  _id,\n  title,\n  publishedAt,\n  excerpt, \n  mainImage,\n  slug\n}`;\n\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\n  // Put site in preview mode if the right query param is used\n  // const preview = requestUrl.searchParams.get(`preview`) === process.env.SANITY_PREVIEW_SECRET\n\n  // const allArticles = await Promise.all([\n  //   await client.fetch(homeQuery).then((result) => articleStubsZ.parse(result)),\n  //   await exchangeClient\n  //     .fetch(exchangeQuery, exchangeParams)\n  //     .then((result) => exchangeStubsZ.parse(result)),\n  // ]);\n  const requestUrl = new URL(request?.url);\n\n  const referringPath = requestUrl.pathname;\n  const allPosts = await sanity.fetch(query);\n  return { allPosts, referringPath };\n  // Sort combined articles by date\n  // const sortedArticles = allArticles\n  //   .flat()\n  //   .sort((a, b) =>\n  //     a.published && b.published\n  //       ? new Date(b.published).getTime() - new Date(a.published).getTime()\n  //       : 0\n  //   );\n};\n\nexport default function Index() {\n  const { allPosts, referringPath } = useLoaderData<typeof loader>();\n  console.log('allPosts', allPosts);\n  // const matches = useMatches()\n  // const siteMeta: SiteMeta = matches?.find((match) => match?.handle?.id === 'root')?.data?.siteMeta\n  return (\n    <main>\n      {/* {siteMeta?.bio && siteMeta?.bio?.length > 1 ? <Intro value={siteMeta.bio} /> : null} */}\n      <h1 className='text-center text-xl font-bold pt-4'>Blog</h1>\n\n      <ul className='grid gap-5 mx-auto my-6 w-[95%] max-w-[800px]'>\n        {allPosts.length > 0 &&\n          allPosts.map((post) => (\n            <li key={post.title}>\n              {/* Link has all ClassNames of ContentContainer except my-6 */}\n              <Link\n                to={`${referringPath}/${post.slug.current}`}\n                className='bg-slate-50 p-4 rounded w-full mx-auto flex flex-col h-full place-items-center drop-shadow-md'\n              >\n                <h2 className='font-bold text-center pt-2 py-0 col-span-full'>\n                  {post.title}\n                </h2>\n                <p className='text-xs col-span-full pb-4'>\n                  {dayjs(post.publishedAt).format('MMMM DD, YYYY')}\n                </p>\n                <div className='flex flex-col md:flex-row md:items-start md:justify-around items-center w-full'>\n                  {post.mainImage && (\n                    <img\n                      className='max-w-[300]'\n                      loading='lazy'\n                      src={urlFor(post.mainImage).width(300).fit('max').url()}\n                      // width='400'\n                      // height='200'\n                      alt={post.title ?? ``}\n                    />\n                  )}\n                  <div className='text-center p-4'>\n                    <PortableText value={post.excerpt} />\n                  </div>\n                </div>\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n}\n", "import { useState } from 'react';\nimport { useSearchParams, useSubmit, useTransition } from '@remix-run/react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { CustomerDetails, FulfillmentDetails, OrderDetails } from 'myTypes';\nimport CartSummary from '~/components/CartSummary';\nimport ShippingDetailsInputs from '~/components/ShippingDetailsInputs';\nimport CustomerDetailsInputs from '~/components/CustomerDetailsInputs';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport { useCartItems } from '~/context/useCart';\nimport FieldsetGroup from '~/components/styledContainers/FieldsetGroup';\nimport InputRow from '~/components/styledContainers/InputRow';\nimport StoreFrontIcon from '~/icons/StoreFrontIcon';\nimport ShippingTruckIcon from '~/icons/ShippingTruckIcon';\nimport PickupChoiceInputs from '~/components/PickupChoiceInputs';\nimport styles from '~/styles/formStyles.css';\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}\nexport default function CheckoutPage() {\n  const transition = useTransition();\n  const submit = useSubmit();\n\n  const [customerDetails, setCustomerDetails] = useState({} as CustomerDetails);\n  const [fulfillmentDetails, setFulfillmentDetails] = useState({\n    method: 'pickup',\n    pickupLocation: '',\n  } as FulfillmentDetails);\n\n  const cartItems = useCartItems();\n  const [searchParams] = useSearchParams();\n  const warnings = searchParams.getAll('warnings');\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.set(\n      'orderDetails',\n      JSON.stringify({ customerDetails, fulfillmentDetails, cart: cartItems })\n    );\n    submit(formData, { method: 'post', action: '/pay' });\n  };\n\n  // review cart, and on confirmation, send cart to '/pay' action handler via form submission\n  // if the action finds errors of price or stock, it will redirect back to this page with warnings in the url query string\n  return (\n    <div>\n      <h2 className='text-center text-xl p-1'>Review Your Cart</h2>\n      <ContentContainer>\n        <CartSummary />\n      </ContentContainer>\n      <ContentContainer>\n        <form onSubmit={handleSubmit}>\n          {warnings && (\n            <div>\n              <ul>\n                {warnings.map((warning, i) => (\n                  <li key={i}>{warning}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <legend className='text-sm text-blue-800'>contact</legend>\n          <CustomerDetailsInputs\n            customerDetails={customerDetails}\n            setCustomerDetails={setCustomerDetails}\n          />\n          <FieldsetGroup>\n            <InputRow>\n              <div className='label__radio__input pr-3'>\n                <input\n                  className='input-radio'\n                  type='radio'\n                  value='pickup'\n                  checked={fulfillmentDetails.method === 'pickup'}\n                  name='fulfillmentMethod'\n                  id='checkout_id_delivery_pickup'\n                  onChange={() =>\n                    setFulfillmentDetails({\n                      ...fulfillmentDetails,\n                      method: 'pickup',\n                    })\n                  }\n                />\n              </div>\n              <label\n                className={`flex flex-col cursor-pointer ${\n                  fulfillmentDetails.method === 'pickup'\n                    ? 'text-blue-800'\n                    : 'text-gray-700'\n                }`}\n                htmlFor='checkout_id_delivery_pickup'\n              >\n                <span>\n                  <StoreFrontIcon />\n                  free pickup\n                </span>\n              </label>\n            </InputRow>\n            <InputRow>\n              <div className='label__radio__input pr-3'>\n                <input\n                  className='input-radio'\n                  type='radio'\n                  value='shipping'\n                  checked={fulfillmentDetails.method === 'shipping'}\n                  name='fulfillmentMethod'\n                  id='checkout_id_delivery_shipping'\n                  onChange={() =>\n                    setFulfillmentDetails({\n                      ...fulfillmentDetails,\n                      method: 'shipping',\n                    })\n                  }\n                />\n              </div>\n              <label\n                className={`flex flex-col cursor-pointer ${\n                  fulfillmentDetails.method === 'shipping'\n                    ? 'text-blue-800'\n                    : 'text-gray-700'\n                }`}\n                htmlFor='checkout_id_delivery_shipping'\n              >\n                <span>\n                  <ShippingTruckIcon />\n                  $10 shipping\n                </span>\n                <span className='text-sm'>free on orders over $50</span>\n              </label>\n            </InputRow>\n          </FieldsetGroup>\n\n          <AnimatePresence exitBeforeEnter initial={false}>\n            {fulfillmentDetails.method === 'shipping' && (\n              <motion.div\n                key={'shipping'}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <legend className='text-sm text-blue-800'>ship to:</legend>\n                <ShippingDetailsInputs\n                  fulfillmentDetails={fulfillmentDetails}\n                  setFulfillmentDetails={setFulfillmentDetails}\n                />\n              </motion.div>\n            )}\n            {fulfillmentDetails.method === 'pickup' && (\n              <motion.div\n                key={'pickup'}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <legend className='text-sm text-blue-800'>\n                  pickup location\n                </legend>\n                <PickupChoiceInputs\n                  fulfillmentDetails={fulfillmentDetails}\n                  setFulfillmentDetails={setFulfillmentDetails}\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n          <button type='submit'>\n            <input\n              name='cart'\n              value={JSON.stringify(cartItems)}\n              type='hidden'\n            />\n            {transition.state === 'submitting'\n              ? 'calculating...'\n              : 'looks good!'}{' '}\n          </button>\n        </form>\n      </ContentContainer>\n    </div>\n  );\n}\n", "type FormFieldParams = {\n  label: string;\n  name: string;\n  id: string;\n  inputType: string;\n  placeholder?: string;\n  required: boolean;\n  autoComplete: string;\n  value: string | undefined;\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\n};\n\nexport default function CheckoutFormField({\n  label,\n  name,\n  id,\n  inputType,\n  placeholder,\n  required,\n  autoComplete,\n  value,\n  onChange,\n}: FormFieldParams) {\n  return (\n    <div className='label__FormRow grid grid-cols-checkoutForm items-center border-t-2 border-blue-800 first:border-0 focus-visible:border-0'>\n      <label\n        htmlFor={id}\n        className='label__FormRowLabel w-[15%] mr-2 ml-2 text-blue-800 min-w-[70px]'\n      >\n        {label}\n      </label>\n      <input\n        className='label__FormRowInput w-full py-3 pr-4 ml-2 bg-transparent focus-visible:outline-none'\n        id={id}\n        type={inputType}\n        placeholder={placeholder}\n        required={required}\n        autoComplete={autoComplete}\n        value={value}\n        onChange={onChange}\n        name={name}\n      />\n    </div>\n  );\n}\n", "export default function FieldsetGroup({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    //will-change-opacity? will-change-transform?\n    <fieldset\n      className='my-4 mx-0 p-0\n     border-none bg-blue-50 drop-shadow-md rounded '\n    >\n      {children}\n    </fieldset>\n  );\n}\n", "import { FulfillmentDetails } from 'myTypes';\nimport CheckoutFormField from './CheckoutFormField';\nimport FieldsetGroup from './styledContainers/FieldsetGroup';\n\nexport default function ShippingDetailsInputs({\n  fulfillmentDetails,\n  setFulfillmentDetails,\n}: {\n  fulfillmentDetails: FulfillmentDetails;\n  setFulfillmentDetails: React.Dispatch<\n    React.SetStateAction<FulfillmentDetails>\n  >;\n}) {\n  return (\n    <FieldsetGroup>\n      <CheckoutFormField\n        label={!fulfillmentDetails.shippingName?.length ? '' : 'name'}\n        id='shippingName'\n        name='shippingName'\n        inputType={'text'}\n        placeholder={!fulfillmentDetails.shippingName?.length ? 'name' : ''}\n        required={true}\n        autoComplete='name'\n        value={fulfillmentDetails.shippingName}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={\n          !fulfillmentDetails.shippingAddressLine1?.length ? '' : 'address'\n        }\n        id='shippingAddressLine1'\n        name='shippingAddressLine1'\n        inputType={'text'}\n        placeholder={\n          !fulfillmentDetails.shippingAddressLine1?.length\n            ? 'address line 1'\n            : ''\n        }\n        required={true}\n        autoComplete='address-line1'\n        value={fulfillmentDetails.shippingAddressLine1}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!fulfillmentDetails.shippingAddressLine2?.length ? '' : ''}\n        id='shippingAddressLine2'\n        name='shippingAddressLine2'\n        inputType={'text'}\n        placeholder={\n          !fulfillmentDetails.shippingAddressLine2?.length\n            ? 'address line 2'\n            : ''\n        }\n        required={false}\n        autoComplete='address-line2'\n        value={fulfillmentDetails.shippingAddressLine2}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!fulfillmentDetails.shippingCity?.length ? '' : 'city'}\n        id='shippingCity'\n        name='shippingCity'\n        inputType={'text'}\n        placeholder={!fulfillmentDetails.shippingCity?.length ? 'city' : ''}\n        required={true}\n        autoComplete='address-level2'\n        value={fulfillmentDetails.shippingCity}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!fulfillmentDetails.shippingState?.length ? '' : 'state'}\n        id='shippingState'\n        name='shippingState'\n        inputType={'text'}\n        placeholder={!fulfillmentDetails.shippingState?.length ? 'state' : ''}\n        required={true}\n        autoComplete='address-level1'\n        value={fulfillmentDetails.shippingState}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!fulfillmentDetails.shippingPostal_code?.length ? '' : 'zip'}\n        id='shippingPostal_code'\n        name='shippingPostal_code'\n        inputType={'text'}\n        placeholder={\n          !fulfillmentDetails.shippingPostal_code?.length ? 'zip' : ''\n        }\n        required={true}\n        autoComplete='postal-code'\n        value={fulfillmentDetails.shippingPostal_code}\n        onChange={(e) => {\n          setFulfillmentDetails({\n            ...fulfillmentDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n    </FieldsetGroup>\n  );\n}\n", "import { CustomerDetails } from 'myTypes';\nimport CheckoutFormField from './CheckoutFormField';\nimport FieldsetGroup from './styledContainers/FieldsetGroup';\n\nexport default function CustomerDetailsInputs({\n  customerDetails,\n  setCustomerDetails,\n}: {\n  customerDetails: CustomerDetails;\n  setCustomerDetails: React.Dispatch<React.SetStateAction<CustomerDetails>>;\n}) {\n  //will still react controlled inputs for custom UI on form...\n  return (\n    <FieldsetGroup>\n      <CheckoutFormField\n        label={!customerDetails.customerName?.length ? '' : 'name'}\n        id='customerName'\n        name='customerName'\n        inputType={'text'}\n        placeholder={!customerDetails.customerName?.length ? 'name' : ''}\n        required={true}\n        autoComplete='name'\n        value={customerDetails.customerName}\n        onChange={(e) => {\n          setCustomerDetails({\n            ...customerDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!customerDetails.customerPhone?.length ? '' : 'phone'}\n        id='customerPhone'\n        name='customerPhone'\n        inputType={'text'}\n        placeholder={!customerDetails.customerPhone?.length ? 'phone' : ''}\n        required={true}\n        autoComplete='phone'\n        value={customerDetails.customerPhone}\n        onChange={(e) => {\n          setCustomerDetails({\n            ...customerDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n      <CheckoutFormField\n        label={!customerDetails.customerEmail?.length ? '' : 'email'}\n        id='customerEmail'\n        name='customerEmail'\n        inputType={'email'}\n        placeholder={!customerDetails.customerEmail?.length ? 'email' : ''}\n        required={true}\n        autoComplete='email'\n        value={customerDetails.customerEmail}\n        onChange={(e) => {\n          setCustomerDetails({\n            ...customerDetails,\n            [e.target.name]: e.target.value,\n          });\n        }}\n      />\n    </FieldsetGroup>\n  );\n}\n", "export default function InputRow({ children }: { children: React.ReactNode }) {\n  return (\n    //font-size: 1.1rem?\n    <div className='label__input-row w-full py-3 px-3  bg-blue-50 items-center flex'>\n      {children}\n    </div>\n  );\n}\n", "export default function StoreFrontIcon() {\n  return (\n    <>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        className='h-5 w-5 inline mr-2'\n        viewBox='0 0 18 18'\n        fill='currentColor'\n      >\n        <path d='M14.6 16H3.4c-.442 0-.8-.358-.8-.8V7.554C1.648 7 1 5.98 1 4.8V4c0-.12.032-.232.08-.336L2.684.442C2.82.172 3.096 0 3.4 0h11.2c.304 0 .58.17.716.442 0 0 1.602 3.214 1.604 3.222.048.104.08.216.08.336v.8c0 1.18-.648 2.2-1.6 2.754V15.2c0 .442-.358.8-.8.8zm-.8-9.6c.882 0 1.6-.718 1.6-1.6h-3.2c0 .882.718 1.6 1.6 1.6zm0 8V8c-.954 0-1.814-.42-2.4-1.086C10.814 7.58 9.954 8 9 8s-1.814-.42-2.4-1.086C6.014 7.58 5.154 8 4.2 8v6.4h1.6v-4c0-.442.358-.8.8-.8h4.8c.442 0 .8.358.8.8v4h1.6zM2.6 4.8c0 .882.718 1.6 1.6 1.6.882 0 1.6-.718 1.6-1.6H2.6zm8 0H7.4c0 .882.718 1.6 1.6 1.6.882 0 1.6-.718 1.6-1.6zM3.894 1.6l-.8 1.6h11.812l-.8-1.6H3.894zM7.4 14.4h3.2v-3.2H7.4v3.2z'></path>\n      </svg>\n    </>\n  );\n}\n", "function ShippingTruckIcon() {\n  return (\n    <>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        className='h-5 w-5 inline mr-2'\n        viewBox='0 0 20 20'\n        fill='currentColor'\n      >\n        <path\n          d='M17.816 14c-.415-1.162-1.514-2-2.816-2-1.302 0-2.4.838-2.816 2H12v-4h6v4h-.184zM15 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM5 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM2 4h8v10H7.816C7.4 12.838 6.302 12 5 12c-1.302 0-2.4.838-2.816 2H2V4zm13.434 1l1.8 3H12V5h3.434zm4.424 3.485l-3-5C16.678 3.185 16.35 3 16 3h-4c0-.552-.448-1-1-1H1c-.552 0-1 .448-1 1v12c0 .552.448 1 1 1h1.185C2.6 17.162 3.698 18 5 18s2.4-.838 2.816-2h4.37c.413 1.162 1.512 2 2.814 2s2.4-.838 2.816-2H19c.552 0 1-.448 1-1V9c0-.18-.05-.36-.142-.515z'\n          fillRule='evenodd'\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default ShippingTruckIcon;\n", "import { FulfillmentDetails, OrderDetails } from 'myTypes';\nimport FieldsetGroup from './styledContainers/FieldsetGroup';\nimport InputRow from './styledContainers/InputRow';\n\nexport default function PickupChoiceInputs({\n  fulfillmentDetails,\n  setFulfillmentDetails,\n}: {\n  fulfillmentDetails: FulfillmentDetails;\n  setFulfillmentDetails: React.Dispatch<\n    React.SetStateAction<FulfillmentDetails>\n  >;\n}) {\n  return (\n    <FieldsetGroup>\n      <InputRow>\n        <div className='label__radio__input pr-3'>\n          <input\n            className='input-radio'\n            type='radio'\n            value='daniels'\n            checked={fulfillmentDetails.pickupLocation === 'daniels'}\n            name='pickupLocation'\n            id='checkout_id_pickup_daniels'\n            onChange={(e) => {\n              setFulfillmentDetails({\n                ...fulfillmentDetails,\n                pickupLocation: e.target.value,\n              });\n            }}\n          />\n        </div>\n        <label\n          className={`flex flex-col cursor-pointer ${\n            fulfillmentDetails.pickupLocation === 'daniels'\n              ? 'text-blue-800'\n              : 'text-gray-700'\n          }`}\n          htmlFor='checkout_id_pickup_daniels'\n        >\n          <div className='radio__label pickupAddress'>\n            <p className='pickup-locationName'>neighborly coffee</p>\n            <p className='text-sm'>36 lincoln rd.</p>\n            <p className='text-sm'>sharon, ma 02067</p>\n          </div>\n        </label>\n      </InputRow>\n      <InputRow>\n        <div className='label__radio__input pr-3'>\n          <input\n            required\n            className='input-radio'\n            type='radio'\n            value='edge'\n            checked={fulfillmentDetails.pickupLocation === 'edge'}\n            name='pickupLocation'\n            id='checkout_id_pickup_edge'\n            onChange={(e) => {\n              setFulfillmentDetails({\n                ...fulfillmentDetails,\n                pickupLocation: e.target.value,\n              });\n            }}\n          />\n        </div>\n        <label\n          className={`flex flex-col cursor-pointer ${\n            fulfillmentDetails.pickupLocation === 'edge'\n              ? 'text-blue-800'\n              : 'text-gray-700'\n          }`}\n          htmlFor='checkout_id_pickup_edge'\n        >\n          <div className='radio__label pickupAddress'>\n            <p className='pickup-locationName'>edge studio</p>\n            <p className='text-sm'>905 turnpike st,</p>\n            <p className='text-sm'>suite. f</p>\n            <p className='text-sm'>canton, ma 02021</p>\n          </div>\n        </label>\n      </InputRow>\n    </FieldsetGroup>\n  );\n}\n", "import { LoaderArgs, redirect } from '@remix-run/node';\nimport { OrderDetails } from 'myTypes';\nimport { writeOrderToSanity } from '~/lib/sanity/writeOrder';\nimport { retrievePaymentIntent } from '~/lib/stripePaymentIntent';\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const url = new URL(request.url);\n  const id = url.searchParams.get('payment_intent');\n  if (!id) return null;\n  const paymentIntent = await retrievePaymentIntent(id);\n\n  const customerDetails = JSON.parse(paymentIntent.metadata.customerDetails);\n  const fulfillmentDetails = JSON.parse(\n    paymentIntent.metadata.fulfillmentDetails\n  );\n  const cartItems = JSON.parse(paymentIntent.description);\n  const orderId = paymentIntent.id;\n  const total = paymentIntent.amount_received;\n\n  writeOrderToSanity({\n    cart: cartItems,\n    customerDetails,\n    fulfillmentDetails,\n    total,\n    id: orderId,\n  });\n\n  return redirect(`/success?payment_intent=${id}`);\n  // return redirect('/test');\n};\n", "import { OrderDetails } from 'myTypes';\nimport Stripe from 'stripe';\n\n// The docs do not show the config being required, because it's optional when using vanilla javascript. When using typescript it's required because the types are pinned to a specific API version.\n// https://github.com/stripe/stripe-node#usage-with-typescript\n/*@ts-ignore*/\nconst stripe = new Stripe(process.env.STRIPE_TEST_SECRET_KEY, {\n  apiVersion: '2022-08-01',\n});\n\nexport async function createPaymentIntent(orderDetails: OrderDetails) {\n  const { fulfillmentDetails } = orderDetails;\n  if (fulfillmentDetails.method === 'shipping') {\n    return await stripe.paymentIntents.create({\n      amount: orderDetails.total,\n      receipt_email: orderDetails.customerDetails.customerEmail,\n      shipping: {\n        name: orderDetails.customerDetails.customerName,\n        address: {\n          line1: fulfillmentDetails.shippingAddressLine1,\n          line2: fulfillmentDetails.shippingAddressLine2,\n          city: fulfillmentDetails.shippingCity,\n          state: fulfillmentDetails.shippingState,\n          postal_code: fulfillmentDetails.shippingPostal_code,\n        },\n      },\n      currency: 'usd',\n      automatic_payment_methods: {\n        enabled: true,\n      },\n      description: JSON.stringify(orderDetails.cart),\n      metadata: {\n        customerDetails: JSON.stringify(orderDetails.customerDetails),\n        fulfillmentDetails: JSON.stringify(fulfillmentDetails),\n      },\n    });\n  }\n\n  if (fulfillmentDetails.method === 'pickup') {\n    return await stripe.paymentIntents.create({\n      amount: orderDetails.total,\n      receipt_email: orderDetails.customerDetails.customerEmail,\n      currency: 'usd',\n      automatic_payment_methods: {\n        enabled: true,\n      },\n      description: JSON.stringify(orderDetails.cart),\n      metadata: {\n        customerDetails: JSON.stringify(orderDetails.customerDetails),\n        fulfillmentDetails: JSON.stringify(fulfillmentDetails),\n      },\n    });\n  }\n}\nexport async function retrievePaymentIntent(id: string) {\n  return await stripe.paymentIntents.retrieve(id);\n}\n", "import { LoaderArgs } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { retrievePaymentIntent } from '~/lib/stripePaymentIntent';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport { OrderDetails } from 'myTypes';\nimport formatMoney from '~/lib/formatMoney';\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const url = new URL(request.url);\n  const id = url.searchParams.get('payment_intent');\n  if (!id) return null;\n  const paymentIntent = await retrievePaymentIntent(id);\n  const customerDetails = JSON.parse(paymentIntent.metadata.customerDetails);\n  const fulfillmentDetails = JSON.parse(\n    paymentIntent.metadata.fulfillmentDetails\n  );\n  const cartItems = JSON.parse(paymentIntent.description);\n  const orderId = paymentIntent.id;\n  const total = paymentIntent.amount_received;\n\n  const orderDetails: OrderDetails = {\n    cart: cartItems,\n    customerDetails,\n    fulfillmentDetails,\n    total,\n    id: orderId,\n  };\n\n  return orderDetails;\n};\n\nexport default function success() {\n  const orderDetails = useLoaderData<typeof loader>();\n  console.log('orderDetails in success', orderDetails);\n  const cartItems = orderDetails?.cart;\n  const customerDetails = orderDetails?.customerDetails;\n  const fulfillmentDetails = orderDetails?.fulfillmentDetails;\n\n  return (\n    <main>\n      <ContentContainer>\n        <h2 className='text-xl font-bold'>Thank You For Your Order!</h2>\n        <div className='ml-4'>\n          <p>Check your email for a receipt of your order</p>\n          <p>\n            We'll contact you when your order\n            {fulfillmentDetails?.method === 'pickup'\n              ? ' is ready for pickup'\n              : ' ships'}\n          </p>\n        </div>\n        <h3 className='text-xl font-bold'>Order Summary</h3>\n        <div>\n          <div className='ml-4'>\n            <p>{customerDetails?.customerName}</p>\n            <p>{customerDetails?.customerEmail}</p>\n            <p>{customerDetails?.customerPhone}</p>\n          </div>\n        </div>\n        {fulfillmentDetails?.method === 'pickup' ? (\n          <div>\n            <h3 className='text-xl font-bold'>Delivery:</h3>\n            <div className='ml-4'>\n              <p>pickup at: {fulfillmentDetails.pickupLocation}</p>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h3 className='text-xl font-bold'>ship to: </h3>\n            <div className='ml-4'>\n              <p>{fulfillmentDetails?.shippingName}</p>\n              <p>{fulfillmentDetails?.shippingAddressLine1}</p>\n              <p>{fulfillmentDetails?.shippingAddressLine2}</p>\n              <p>\n                <span>{fulfillmentDetails?.shippingCity}</span>\n                <span>{fulfillmentDetails?.shippingPostal_code}</span>\n              </p>\n            </div>\n          </div>\n        )}\n\n        <ul className='w-2/3 mx-auto'>\n          {cartItems?.map((cartItem) => (\n            <li key={cartItem.name}>\n              <p className='flex'>\n                {`${cartItem.quantity} ${cartItem.name}, ${cartItem.grind}: `}\n                <span className='ml-auto'>\n                  {`$${formatMoney(cartItem.price * cartItem.quantity)}`}\n                </span>\n              </p>\n            </li>\n          ))}\n          {fulfillmentDetails?.method === 'shipping' && (\n            <li>\n              <p className='flex'>\n                Shipping:\n                <span className='ml-auto'>{`$${formatMoney(\n                  fulfillmentDetails.shippingCost\n                )}`}</span>\n              </p>\n            </li>\n          )}\n          <li>\n            <p className='flex'>\n              Total:{' '}\n              <span className='ml-auto'>\n                ${formatMoney(orderDetails?.total)}\n              </span>\n            </p>\n          </li>\n        </ul>\n      </ContentContainer>\n    </main>\n  );\n}\n", "import ContentContainer from '~/components/styledContainers/ContentContainer';\n\nexport default function eventsPage() {\n  return (\n    <>\n      <h1 className='text-center text-xl font-bold pt-4'>Events</h1>\n      <ContentContainer>\n        <p>Single event container</p>\n      </ContentContainer>\n    </>\n  );\n}\n", "import { LoaderArgs, LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport { PortableText } from '~/lib/sanity/helpers';\nimport sanity from '~/lib/sanity/sanity';\n\nconst aboutPageQuery = `*[_type == 'aboutPage']`;\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\n  const data = await sanity.fetch(aboutPageQuery);\n  return data;\n};\n\nexport default function aboutPage() {\n  const data = useLoaderData<typeof loader>()[0];\n  console.log('data', data);\n  return (\n    <main>\n      <h1>{data.heading}</h1>\n      <ContentContainer>\n        <PortableText value={data.content} />\n      </ContentContainer>\n    </main>\n  );\n}\n", "import { LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport sanity from '~/lib/sanity/sanity';\nimport type { Coffee, LandingPage } from '../../sanityTypes';\n\nimport HomeHero from '~/components/HomeHero';\nimport FeaturedItems from '~/components/FeaturedItems';\n\nconst contentQuery = `{\n  \"heroContent\": *[_id == \"homePage\" ] {\n  \"imageUrl\": bgImage1.asset->url,\n  overlayText1\n  }[0],\n  \"coffee\": *[_type == \"coffee\" && !(_id in path('drafts.**'))] {\n    name, \n    roastLevel,\n    description,\n    roastDate,\n    stock, slug{current}\n  }\n}`;\n\ninterface LoaderData {\n  coffee: Coffee[];\n  heroContent: LandingPage;\n  referringPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const requestUrl = new URL(request?.url);\n  const referringPath = requestUrl.pathname;\n\n  const content = await sanity.fetch(contentQuery);\n  const data: LoaderData = {\n    coffee: content.coffee,\n    heroContent: content.heroContent,\n    referringPath: referringPath,\n  };\n  return data;\n};\n\nexport default function Index() {\n  const data = useLoaderData<LoaderData>();\n\n  return (\n    <main className='w-min-[320px] p-4'>\n      <HomeHero heroContent={data.heroContent} />\n      <FeaturedItems\n        allCoffee={data.coffee}\n        referringPath={data.referringPath + 'coffee/'}\n      />\n    </main>\n  );\n}\n", "import type { LandingPage } from '../../sanityTypes';\n// import PortableText from 'react-portable-text';\nimport { PortableText } from '@portabletext/react';\n\nexport default function HomeHero({\n  heroContent,\n}: {\n  heroContent: LandingPage;\n}) {\n  const blockContent = heroContent.overlayText1;\n  if (!heroContent.imageUrl && !heroContent.overlayText1) return null;\n  return (\n    <div className='grid place-content-center bg-slate-50'>\n      <img\n        className='row-span-full col-span-full w-screen'\n        src={heroContent.imageUrl}\n      />\n      {heroContent.overlayText1 && (\n        <div className='grid row-span-full col-span-full relative place-items-center  '>\n          <div className='bg-slate-900/50 text-slate-50 w-2/3 p-[5%] text-center'>\n            {heroContent.overlayText1 && (\n              <PortableText value={heroContent.overlayText1} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import type { Coffee } from '../../sanityTypes';\nimport CoffeeCard from './CoffeeCard';\n\nfunction FeaturedItems({\n  allCoffee,\n  referringPath,\n}: {\n  allCoffee: Coffee[];\n  referringPath: string;\n}) {\n  return (\n    <div className='px-4 py-2 w-full flex flex-col items-center'>\n      <div className='py-2'>\n        <h2 className='text-2xl font-medium'>Featured Items Heading</h2>\n      </div>\n      <div className='py-2 flex flex-wrap justify-center gap-4'>\n        {allCoffee.map((coffee) => (\n          <CoffeeCard\n            key={coffee.name}\n            coffee={coffee}\n            referringPath={referringPath}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedItems;\n", "export default function testRoute() {\n  return <div>test route</div>;\n}\n", "import { ActionArgs, redirect } from '@remix-run/node';\nimport { Outlet, useActionData } from '@remix-run/react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport invariant from 'tiny-invariant';\nimport { Coffee } from 'sanityTypes';\nimport sanityClient from '~/lib/sanity/sanity';\nimport checkAvailability from '~/lib/checkAvailability';\nimport calcVerifiedTotal from '~/lib/calcVerifiedTotal';\nimport reduceCartByName from '~/lib/reduceCartByName';\nimport { createPaymentIntent } from '~/lib/stripePaymentIntent';\nimport { OrderDetails } from 'myTypes';\nimport calcShipping from '~/lib/calcShipping';\n\nconst stripePromise = loadStripe('pk_test_CkfBPTwVc1IMB6BXSDsSytR8');\n\nexport const action = async ({ request }: ActionArgs) => {\n  const form = await request.formData();\n  const orderDetailsBody = form.get('orderDetails');\n\n  invariant(\n    typeof orderDetailsBody === 'string',\n    'cart not submitted properly; must be a string'\n  );\n\n  const orderDetails: OrderDetails = JSON.parse(orderDetailsBody);\n  const cart = orderDetails.cart;\n\n  //create an OBJ of cart Items keyed by price and quantity, regardless of whole bean or ground, to query sanity and calculate total cost\n  const cartKeyedByName = reduceCartByName(cart);\n  // create array of coffeeNames that need to be queried in Sanity\n  const coffeeInCart: string[] = Object.keys(cartKeyedByName);\n  // query Sanity to verify prices and stock\n  const sanityQuery = `*[_type == \"coffee\" && name in ${JSON.stringify(\n    coffeeInCart\n  )} && !(_id in path(\"drafts.**\"))] {name, price, stock}\n    `;\n  const sanityResponse: Coffee[] = await sanityClient.fetch(sanityQuery);\n  // is product still in db?, and if so, does available stock satisfy what is quantity in the cart?\n\n  const availableCoffee = sanityResponse.map((item) => item.name);\n  // set current prices and inStock onto each CartItem\n  sanityResponse.forEach((coffee) => {\n    let key: string = coffee.name;\n    cartKeyedByName[key].price = coffee.price;\n    cartKeyedByName[key].inStock = coffee.stock;\n  });\n  //separate function to check response availability against order\n\n  const warningMessages = checkAvailability(cartKeyedByName, availableCoffee);\n  //calculate total with shipping based on verified prices\n\n  // if any insufficientStock or unavailable, return to reviewCart page with message to client in url query string\n  if (warningMessages.length > 0) {\n    return redirect(\n      `reviewCart/?warnings=${warningMessages.join('&warnings=')}`\n    );\n  }\n\n  const total = calcVerifiedTotal(cartKeyedByName);\n  const shippingCost = calcShipping(total);\n  orderDetails.fulfillmentDetails.shippingCost = shippingCost;\n  const typedOrderDetails: OrderDetails = {\n    cart,\n    total: total + shippingCost,\n    customerDetails: orderDetails.customerDetails,\n    fulfillmentDetails: orderDetails.fulfillmentDetails,\n    id: null,\n  };\n  return await createPaymentIntent(typedOrderDetails).catch((err) => {\n    console.log(err);\n    return err;\n  });\n};\n\nexport default function Pay() {\n  const paymentIntent = useActionData<typeof action>();\n\n  if (!paymentIntent.client_secret) {\n    return <p>error</p>;\n  }\n\n  return (\n    <Elements\n      stripe={stripePromise}\n      // options={{\n      //   clientSecret:\n      //     'pi_3LuIt8IelpPXOmiI2As4bJfd_secret_5IMVODJXybZEcywL312Oje2R7',\n      // }}\n      options={{ clientSecret: paymentIntent.client_secret }}\n    >\n      <Outlet />\n    </Elements>\n  );\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function checkAvailability(\n  cartKeyedByName: Record<string, CartItem>,\n  availableCoffee: string[]\n) {\n  const warningMessages = [];\n  for (const itemName in cartKeyedByName) {\n    if (\n      cartKeyedByName[itemName].inStock < cartKeyedByName[itemName].quantity\n    ) {\n      warningMessages.push(\n        `There are only ${cartKeyedByName[itemName].inStock} ${itemName} in stock`\n      );\n      // cartKeyedByName[itemName].insufficientStock = true;\n    }\n    if (!availableCoffee.includes(cartKeyedByName[itemName].name)) {\n      warningMessages.push(`${itemName} is no longer available`);\n      // cartKeyedByName[itemName].unavailable = true;\n    }\n  }\n  return warningMessages;\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function calcVerifiedTotal(\n  obj: Record<string, CartItem>\n): number {\n  //stripe paymentIntent wants the amount to be in smallest currency unit (i.e. cents)\n  let total = 0;\n  for (const item in obj) {\n    const itemTotal = obj[item].price * obj[item].quantity;\n    total += itemTotal;\n  }\n  // add $10 shipping if less than 5000\n  //moved into separate function to call in action, in able to attach shipping cost to paymentIntent\n  // if (total < 4999) {\n  //   total += 1000;\n  // }\n  return total;\n}\n", "import { CartItem } from 'myTypes';\n\nexport default function reduceCartByName(cart: CartItem[]) {\n  const keyedCart = cart.reduce((acc, cartItem) => {\n    let key: string = cartItem.name;\n    // const quantity = cartItem.quantity;\n    if (acc[key]) {\n      acc[key].quantity = acc[key].quantity + cartItem.quantity;\n      return acc;\n    } else\n      return {\n        ...acc,\n        [key]: {\n          ...cartItem,\n        },\n      };\n  }, {} as Record<string, CartItem>);\n  return keyedCart;\n}\n", "export default function calcShipping(verifiedTotal: number) {\n  if (verifiedTotal < 4999) {\n    return 1000;\n  } else return 0;\n}\n", "import { Form } from '@remix-run/react';\nimport {\n  PaymentElement,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js';\nimport ContentContainer from '~/components/styledContainers/ContentContainer';\nimport CollapsibleCartSummary from '~/components/CollapsibleCartSummary';\nimport { useCartItems } from '~/context/useCart';\n\nexport default function Index() {\n  const cartItems = useCartItems();\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (!stripe || !elements) return null;\n\n    stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: 'http://localhost:3000/writeOrder',\n      },\n    });\n  };\n\n  if (!cartItems.length) {\n    return (\n      <ContentContainer>\n        Oops! There was an error retrieving your cart, please continue shopping.\n      </ContentContainer>\n    );\n  }\n\n  // TODO - pending UI\n  return (\n    <ContentContainer>\n      <CollapsibleCartSummary />\n      <Form onSubmit={handleSubmit}>\n        <PaymentElement />\n        <button className='bg-amber-700 text-amber-50 px-4 py-3'>\n          confirm\n        </button>\n      </Form>\n    </ContentContainer>\n  );\n}\n", "import { useState } from 'react';\nimport { useCartItems } from '~/context/useCart';\nimport PlaySvg from '~/icons/PlaySvg';\nimport calcTotalPrice from '~/lib/calcCartTotal';\nimport formatMoney from '~/lib/formatMoney';\n\nexport default function CollapsibleCartSummary() {\n  const [showSummary, toggleShowSummary] = useState(false);\n  const cartItems = useCartItems();\n  const subtotal = calcTotalPrice(cartItems);\n  const shipping = subtotal < 4999 ? 1000 : 0;\n  if (!cartItems.length) return <div>Your cart is empty</div>;\n  return (\n    <>\n      <div className='flex p-2 w-full items-center '>\n        <button\n          className='self-start p-2'\n          onClick={() => toggleShowSummary(!showSummary)}\n        >\n          <div className={`${showSummary ? 'rotate-90' : ''}`}>\n            <PlaySvg />\n          </div>\n        </button>\n        <p>{showSummary ? `Hide Summary` : `Show Summary`}</p>\n        <p className='ml-auto'>{`Total Cost: $${formatMoney(\n          subtotal + shipping\n        )}`}</p>\n      </div>\n      <div>\n        <p className='p-2'>\n          {showSummary ? (\n            <ul className='text-center '>\n              {cartItems.map((cartItem) => (\n                <li className='px-3' key={cartItem.name}>\n                  <p className='flex'>\n                    {`${cartItem.quantity} ${cartItem.name}, ${cartItem.grind}: `}\n                    <span className='ml-auto'>\n                      {`$${formatMoney(cartItem.price * cartItem.quantity)}`}\n                    </span>\n                  </p>\n                </li>\n              ))}\n              <li className='px-3'>\n                <p className='flex'>\n                  Shipping:\n                  <span className='ml-auto'>{`$${formatMoney(shipping)}`}</span>\n                </p>\n              </li>\n            </ul>\n          ) : null}\n        </p>\n      </div>\n    </>\n  );\n}\n", "export default function PlaySvg({ w = '20', h = '20' }) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={w}\n      height={h}\n      viewBox='0 0 24 24'\n      fill='currentColor'\n      // className='w-6 h-6'\n    >\n      <path\n        fillRule='evenodd'\n        d='M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z'\n        clipRule='evenodd'\n      />\n    </svg>\n  );\n}\n", "export default {'version':'6b2891b0','entry':{'module':'/build/entry.client-EQVIT4XT.js','imports':['/build/_shared/chunk-QPAHCSNA.js','/build/_shared/chunk-VFZ2QWLC.js','/build/_shared/chunk-4IYZMDEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-N7WZLQ6X.js','imports':['/build/_shared/chunk-ANJYYJL3.js','/build/_shared/chunk-KRELI6C6.js','/build/_shared/chunk-ZES7FEGO.js','/build/_shared/chunk-OIWZJZJJ.js','/build/_shared/chunk-QECRIRPP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-RVPB4KJM.js','imports':['/build/_shared/chunk-RLI3BVWQ.js','/build/_shared/chunk-NRMOECEQ.js','/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog/$slug':{'id':'routes/blog/$slug','parentId':'root','path':'blog/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog/$slug-YM7WPWIR.js','imports':['/build/_shared/chunk-TN3JIMCE.js','/build/_shared/chunk-RLI3BVWQ.js','/build/_shared/chunk-NRMOECEQ.js','/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/blog/index':{'id':'routes/blog/index','parentId':'root','path':'blog','index':true,'caseSensitive':undefined,'module':'/build/routes/blog/index-3HYJCKKG.js','imports':['/build/_shared/chunk-7PI2UB73.js','/build/_shared/chunk-RLI3BVWQ.js','/build/_shared/chunk-NRMOECEQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/coffee/$coffeeSlug':{'id':'routes/coffee/$coffeeSlug','parentId':'root','path':'coffee/:coffeeSlug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/coffee/$coffeeSlug-5LG4KFML.js','imports':['/build/_shared/chunk-TN3JIMCE.js','/build/_shared/chunk-7PI2UB73.js','/build/_shared/chunk-RLI3BVWQ.js','/build/_shared/chunk-NRMOECEQ.js','/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/coffee/index':{'id':'routes/coffee/index','parentId':'root','path':'coffee','index':true,'caseSensitive':undefined,'module':'/build/routes/coffee/index-7IDSXU4N.js','imports':['/build/_shared/chunk-ZUW3YEWI.js','/build/_shared/chunk-7PI2UB73.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/events':{'id':'routes/events','parentId':'root','path':'events','index':undefined,'caseSensitive':undefined,'module':'/build/routes/events-HYKU3L6G.js','imports':['/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-NER6EESI.js','imports':['/build/_shared/chunk-ZUW3YEWI.js','/build/_shared/chunk-7PI2UB73.js','/build/_shared/chunk-NRMOECEQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pay':{'id':'routes/pay','parentId':'root','path':'pay','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pay-7OA7NK2V.js','imports':['/build/_shared/chunk-4XUEA3N2.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pay/index':{'id':'routes/pay/index','parentId':'routes/pay','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/pay/index-FSIQ47E7.js','imports':['/build/_shared/chunk-KRELI6C6.js','/build/_shared/chunk-ZES7FEGO.js','/build/_shared/chunk-QECRIRPP.js','/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reviewCart':{'id':'routes/reviewCart','parentId':'root','path':'reviewCart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reviewCart-N7EQQ53P.js','imports':['/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/stripeWebhook':{'id':'routes/stripeWebhook','parentId':'root','path':'stripeWebhook','index':undefined,'caseSensitive':undefined,'module':'/build/routes/stripeWebhook-JV44EH23.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/success':{'id':'routes/success','parentId':'root','path':'success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/success-SFFJRCUA.js','imports':['/build/_shared/chunk-TFUDANG3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/test':{'id':'routes/test','parentId':'root','path':'test','index':undefined,'caseSensitive':undefined,'module':'/build/routes/test-CXVV6O2R.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/writeOrder':{'id':'routes/writeOrder','parentId':'root','path':'writeOrder','index':undefined,'caseSensitive':undefined,'module':'/build/routes/writeOrder-SMVIJC5V.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-6B2891B0.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/coffee/$coffeeSlug.tsx\";\nimport * as route2 from \"./routes/stripeWebhook.tsx\";\nimport * as route3 from \"./routes/coffee/index.tsx\";\nimport * as route4 from \"./routes/blog/$slug.tsx\";\nimport * as route5 from \"./routes/blog/index.tsx\";\nimport * as route6 from \"./routes/reviewCart.tsx\";\nimport * as route7 from \"./routes/writeOrder.tsx\";\nimport * as route8 from \"./routes/success.tsx\";\nimport * as route9 from \"./routes/events.tsx\";\nimport * as route10 from \"./routes/about.tsx\";\nimport * as route11 from \"./routes/index.tsx\";\nimport * as route12 from \"./routes/test.tsx\";\nimport * as route13 from \"./routes/pay.tsx\";\nimport * as route14 from \"./routes/pay/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/coffee/$coffeeSlug\": {\n      id: \"routes/coffee/$coffeeSlug\",\n      parentId: \"root\",\n      path: \"coffee/:coffeeSlug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/stripeWebhook\": {\n      id: \"routes/stripeWebhook\",\n      parentId: \"root\",\n      path: \"stripeWebhook\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/coffee/index\": {\n      id: \"routes/coffee/index\",\n      parentId: \"root\",\n      path: \"coffee\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/blog/$slug\": {\n      id: \"routes/blog/$slug\",\n      parentId: \"root\",\n      path: \"blog/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/blog/index\": {\n      id: \"routes/blog/index\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/reviewCart\": {\n      id: \"routes/reviewCart\",\n      parentId: \"root\",\n      path: \"reviewCart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/writeOrder\": {\n      id: \"routes/writeOrder\",\n      parentId: \"root\",\n      path: \"writeOrder\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/success\": {\n      id: \"routes/success\",\n      parentId: \"root\",\n      path: \"success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/events\": {\n      id: \"routes/events\",\n      parentId: \"root\",\n      path: \"events\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/test\": {\n      id: \"routes/test\",\n      parentId: \"root\",\n      path: \"test\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/pay\": {\n      id: \"routes/pay\",\n      parentId: \"root\",\n      path: \"pay\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/pay/index\": {\n      id: \"routes/pay/index\",\n      parentId: \"routes/pay\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "links", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "action", "import_react", "cartItems", "sanityClient", "links", "CatchBoundary", "ErrorBoundary", "loader", "import_react", "import_react", "import_react", "import_react", "query", "query", "sanityClient", "PicoSanity", "import_react", "imageUrlBuilder", "PortableTextComponent", "import_react", "loader", "dayjs", "CatchBoundary", "ErrorBoundary", "Stripe", "loader", "import_react", "import_dayjs", "import_react", "dayjs", "loader", "CatchBoundary", "ErrorBoundary", "CoffeeRoute", "loader", "import_react", "import_react", "loader", "CoffeeRoute", "CatchBoundary", "ErrorBoundary", "loader", "import_react", "import_react", "import_dayjs", "query", "loader", "dayjs", "links", "import_react", "links", "loader", "import_node", "import_stripe", "stripe", "Stripe", "loader", "loader", "import_react", "loader", "loader", "import_react", "loader", "Index", "loader", "import_react", "import_react", "FeaturedItems", "loader", "Index", "action", "import_node", "import_react", "action", "invariant", "pay_exports", "Index", "import_react", "import_react_stripe_js", "import_react", "Index", "stripe", "pay_exports"]
}
